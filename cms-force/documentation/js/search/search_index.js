var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/modules/AppRoutingModule.html",[0,0.196,1,1.779]],["body/modules/AppRoutingModule.html",[0,0.322,1,2.913,2,0.433,3,0.433,4,0.344,5,0.344,6,3.491,7,3.491,8,0.935,9,0.055,10,4.33,11,0.868,12,4.707,13,4.33,14,4.921,15,2.803,16,1.639,17,4.33,18,2.292,19,2.493,20,4.921,21,1.639,22,2.042,23,1.639,24,4.33,25,2.493,26,1.639,27,0.35,28,3.778,29,4.33,30,5.155,31,4.33,32,0.463,33,5.155,34,5.155,35,3.491,36,1.74,37,1.051,38,3.491,39,1.153,40,3.491,41,3.491,42,1.74,43,3.491,44,3.491,45,3.491,46,3.491,47,2.803,48,0.433,49,0.032,50,0.034,51,0.042,52,0.034]],["title/classes/Content.html",[32,0.26,49,0.025]],["body/classes/Content.html",[0,0.215,2,0.36,3,0.241,4,0.191,5,0.191,8,0.353,9,0.055,27,0.144,32,0.538,39,1.742,48,0.241,49,0.018,50,0.019,51,0.028,52,0.019,53,0.843,54,1.56,55,0.812,56,2.213,57,3.842,58,2.586,59,0.44,60,2.629,61,1.221,62,2.255,63,2.302,64,0.526,65,1.787,66,3.842,67,3.085,68,2.586,69,3.085,70,3.085,71,3.842,72,2.898,73,2.327,74,1.95,75,2.327,76,2.327,77,2.898,78,0.295,79,1.95,80,1.68,81,1.004,82,1.984,83,0.785,84,2.898,85,0.678,86,0.554,87,0.616,88,0.678,89,2.288,90,2.072,91,2.898,92,2.327,93,1.445,94,2.898,95,0.782,96,0.782,97,1.943,98,1.943,99,0.957,100,1.943,101,1.943,102,1.943,103,2.898,104,1.943,105,0.934,106,1.943,107,1.943,108,1.943,109,1.669,110,1.943,111,1.943,112,2.898,113,1.943,114,2.446,115,0.609,116,1.239,117,2.327,118,1.943,119,1.95,120,1.943,121,2.327,122,1.943,123,1.258,124,2.327,125,1.943,126,2.898,127,1.943,128,0.891,129,1.239,130,2.332,131,1.996,132,2.783,133,2.783,134,2.783,135,2.783,136,0.782]],["title/components/ContentCreatorPageComponent.html",[16,1.001,37,0.565]],["body/components/ContentCreatorPageComponent.html",[0,0.289,2,0.328,3,0.214,4,0.169,5,0.169,8,0.707,9,0.055,11,0.428,16,1.368,18,2.341,19,2.844,21,0.652,22,0.747,23,0.652,26,0.652,27,0.196,32,0.531,36,2.135,37,0.833,39,1.657,42,1.8,48,0.214,49,0.016,50,0.017,51,0.026,52,0.017,55,0.688,58,1.779,59,0.401,60,1.8,61,0.658,62,1.785,63,1.785,64,0.48,65,1.063,78,0.548,81,0.936,82,1.622,83,0.742,85,0.488,86,0.484,87,0.575,88,0.488,93,1.318,95,0.707,96,0.584,99,1.529,105,0.802,109,2.08,114,2.05,115,0.484,116,0.925,123,1.147,128,0.655,129,1.271,131,1.854,133,2.122,134,2.584,136,0.777,137,1.318,138,0.991,139,0.991,140,0.991,141,0.991,142,3.323,143,0.858,144,1.523,145,1.523,146,1.854,147,0.991,148,2.369,149,2.05,150,1.523,151,1.854,152,1.523,153,1.523,154,1.604,155,2.584,156,2.369,157,2.584,158,2.584,159,2.644,160,2.08,161,2.9,162,3.115,163,3.612,164,2.644,165,1.158,166,1.567,167,1.691,168,1.779,169,2.644,170,2.166,171,2.644,172,2.584,173,2.644,174,1.721,175,2.644,176,3.303,177,1.691,178,2.122,179,2.975,180,2.644,181,1.721,182,1.523,183,1.523,184,2.08,185,1.854,186,1.721,187,2.644,188,2.467,189,3.439,190,2.122,191,1.382,192,1.523,193,2.122,194,2.644,195,2.122,196,1.721,197,2.08,198,4.114,199,2.644,200,2.08,201,2.644,202,1.721,203,2.122,204,2.644,205,2.644,206,2.644,207,2.644,208,1.318,209,2.122,210,2.644,211,0.873,212,2.122,213,2.644,214,1.854,215,1.382,216,2.883,217,2.122,218,2.9,219,1.382,220,1.779,221,2.122,222,2.644,223,2.644,224,1.721,225,2.122,226,1.382,227,1.147,228,1.854,229,2.122,230,2.644,231,2.644,232,1.382,233,1.382,234,1.382,235,0.858,236,0.858,237,1.721,238,0.652,239,1.158,240,0.652,241,1.158,242,1.721,243,2.584,244,2.644,245,1.721,246,1.721,247,1.721,248,1.382,249,1.382,250,1.721,251,1.721,252,1.721,253,1.721,254,1.721,255,1.721,256,1.721,257,1.721,258,1.397,259,1.382,260,1.382,261,1.382,262,1.158,263,0.858,264,0.858,265,1.382,266,1.382,267,1.721,268,1.721,269,1.721,270,2.644,271,1.721,272,1.721,273,1.721,274,2.644,275,1.721,276,1.721,277,1.721,278,1.721,279,0.991,280,1.523,281,1.523,282,0.991,283,1.523,284,2.122,285,2.122,286,0.991,287,0.991,288,1.854,289,0.991,290,1.854,291,0.991,292,2.467,293,2.08,294,1.854,295,0.991,296,0.991,297,1.854,298,1.523,299,0.991,300,1.523,301,0.991,302,0.991,303,0.991,304,0.991,305,1.604,306,1.854,307,1.854,308,1.854,309,2.369,310,1.854,311,0.991,312,0.991,313,0.991,314,1.523,315,0.991,316,0.991,317,0.991,318,0.991,319,0.991,320,1.382,321,1.382,322,1.382,323,1.382,324,1.382,325,1.382,326,0.858,327,0.747,328,1.382,329,2.122,330,1.523,331,0.991,332,0.991,333,0.991,334,0.991,335,0.858,336,1.523,337,1.523,338,0.991,339,2.08,340,0.991,341,1.854,342,0.991,343,0.991]],["title/injectables/ContentFetcherService.html",[166,1.147,344,0.76]],["body/injectables/ContentFetcherService.html",[0,0.31,2,0.476,3,0.288,4,0.228,5,0.228,8,0.856,9,0.055,11,0.577,27,0.172,32,0.541,48,0.288,49,0.022,50,0.023,51,0.032,52,0.023,55,0.696,56,1.899,59,0.5,61,1.237,64,0.598,78,0.5,80,1.679,81,0.758,83,0.744,85,0.716,86,0.586,87,0.609,88,0.716,89,2.082,90,1.813,95,0.421,96,0.421,105,0.856,115,0.569,128,0.856,136,0.93,154,1.912,166,1.431,195,2.647,208,2.638,211,1.592,227,1.431,235,2.479,240,1.671,264,2.082,344,0.948,345,1.156,346,1.561,347,2.647,348,2.219,349,2.864,350,2.479,351,3.937,352,3.297,353,3.297,354,3.297,355,4.177,356,3.297,357,3.297,358,3.297,359,1.561,360,2.811,361,3.085,362,2.082,363,3.297,364,2.219,365,2.219,366,2.647,367,3.681,368,3.297,369,2.319,370,4.08,371,2.533,372,1.431,373,3.353,374,3.495,375,3.297,376,2.319,377,4.177,378,3.297,379,3.297,380,2.319,381,2.647,382,2.219,383,1.862,384,3.297,385,2.319,386,3.297,387,2.319,388,3.297,389,2.219,390,2.647,391,2.647,392,3.297,393,2.319,394,3.297,395,3.297,396,3.079,397,2.647,398,1.561,399,1.561,400,1.862,401,1.561,402,1.862,403,1.862,404,1.862,405,1.336,406,1.336,407,3.87,408,3.297,409,2.319,410,3.353,411,2.319,412,2.319,413,3.353,414,2.319,415,2.319,416,2.319,417,2.319,418,2.319,419,2.319]],["title/components/ContentFinderPageComponent.html",[21,1.001,37,0.565]],["body/components/ContentFinderPageComponent.html",[0,0.188,2,0.315,3,0.202,4,0.16,5,0.16,8,0.69,9,0.055,11,0.406,16,0.617,18,1.1,19,2.862,21,1.329,22,2.345,23,0.617,26,0.617,27,0.188,32,0.532,36,2.094,37,0.812,39,0.837,42,2.006,48,0.202,49,0.015,50,0.016,51,0.025,52,0.025,55,0.532,58,2.093,59,0.385,60,2.165,61,0.946,62,0.707,63,1.823,64,0.46,65,1.028,78,0.532,80,1.329,81,0.902,83,0.748,85,0.472,86,0.5,87,0.586,88,0.472,92,1.309,93,1.894,95,0.73,96,0.73,99,1.329,105,0.762,109,2.189,115,0.202,116,1.092,123,1.885,128,0.637,129,0.729,131,1.46,136,0.637,137,1.263,138,0.939,139,0.939,140,0.939,141,0.939,142,3.344,143,0.812,144,1.46,145,1.46,146,1.791,147,0.939,148,2.318,149,2.006,150,1.46,151,1.791,152,1.46,153,1.46,154,1.55,155,3.052,156,2.318,157,2.497,158,2.497,160,2.021,162,2.708,165,1.097,166,1.523,167,1.649,168,1.097,170,2.093,176,3.231,177,1.649,179,2.923,182,1.46,183,1.46,184,1.46,185,1.46,188,2.021,189,2.035,190,2.035,191,1.309,192,1.46,193,2.035,200,2.021,203,2.817,209,2.035,211,1.388,214,2.021,215,1.309,216,2.093,217,2.035,218,2.035,219,1.309,220,1.097,225,2.035,226,1.309,227,1.1,228,0.939,229,2.817,232,1.309,233,1.309,235,0.812,236,0.812,238,0.617,239,1.097,240,0.617,241,1.097,243,2.035,258,1.823,262,1.097,263,0.812,264,0.812,265,2.035,266,1.309,279,0.939,280,1.46,281,1.46,282,0.939,283,1.46,286,0.939,287,0.939,288,1.791,289,0.939,290,1.791,291,0.939,292,2.318,293,1.46,294,1.791,295,0.939,296,0.939,297,1.791,298,0.939,299,0.939,300,1.46,301,0.939,302,1.46,303,1.46,304,0.939,305,1.55,306,1.791,307,1.791,308,1.791,309,2.318,310,1.791,311,0.939,312,0.939,313,0.939,314,0.939,315,0.939,316,0.939,317,0.939,318,0.939,319,0.939,326,0.812,327,1.35,330,1.46,331,0.939,332,0.939,333,0.939,334,0.939,335,0.812,336,1.46,337,1.46,338,0.939,339,2.021,340,0.939,341,1.791,342,0.939,343,0.939,371,1.263,389,1.706,403,1.309,404,1.309,420,2.923,421,3.111,422,3.111,423,3.111,424,2.535,425,3.509,426,2.035,427,2.817,428,2.535,429,3.801,430,2.535,431,2.535,432,1.63,433,2.535,434,2.535,435,1.63,436,1.63,437,3.509,438,3.002,439,2.535,440,2.035,441,1.63,442,3.509,443,3.052,444,2.361,445,2.035,446,1.63,447,2.035,448,2.535,449,2.535,450,1.706,451,2.535,452,2.535,453,2.535,454,1.63,455,2.535,456,1.63,457,2.535,458,2.535,459,2.535,460,2.535,461,3.509,462,2.535,463,1.46,464,1.63,465,2.535,466,1.63,467,1.309,468,1.309,469,1.63,470,1.63,471,1.63,472,1.309,473,1.706,474,1.63,475,1.63,476,1.63,477,1.309,478,1.63,479,1.097,480,1.63,481,1.63,482,1.63,483,2.535,484,1.63,485,2.535,486,1.63,487,1.63,488,2.535,489,1.63,490,2.035,491,2.035,492,2.035,493,2.035,494,2.035,495,2.535,496,2.035,497,1.309,498,2.035,499,1.309,500,1.309,501,1.309,502,0.939,503,2.035,504,1.309,505,2.035,506,1.309,507,1.309,508,1.309,509,1.309,510,1.309,511,1.309,512,1.309,513,1.309,514,1.309,515,2.035,516,1.097,517,1.309,518,1.309,519,1.309]],["title/classes/ContentWrapper.html",[49,0.025,520,1.779]],["body/classes/ContentWrapper.html",[2,0.623,3,0.459,4,0.364,5,0.364,8,0.671,9,0.054,27,0.274,32,0.547,48,0.459,49,0.034,50,0.036,51,0.044,52,0.036,53,1.604,55,0.68,59,0.68,62,1.946,78,0.561,81,0.933,83,0.732,85,0.561,86,0.459,87,0.599,88,0.561,128,0.814,177,2.316,520,3.017,521,2.967,522,5.019,523,4.484,524,4.484,525,3.017,526,4.484,527,4.484,528,3.696,529,4.029,530,3.696,531,2.487]],["title/injectables/EndpointsService.html",[344,0.76,362,1.318]],["body/injectables/EndpointsService.html",[0,0.36,2,0.415,3,0.293,4,0.233,5,0.233,8,0.703,9,0.055,11,0.588,27,0.176,32,0.515,39,1.392,48,0.293,49,0.022,50,0.023,51,0.033,52,0.023,55,0.359,59,0.507,61,1.048,64,0.606,65,1.817,78,0.359,81,0.984,83,0.786,85,0.507,86,0.415,87,0.633,88,0.507,95,0.916,96,0.916,105,0.764,115,0.293,123,1.682,136,0.429,154,2.724,182,1.924,208,1.666,211,1.104,258,1.45,344,0.96,345,1.178,349,1.924,350,1.666,359,1.591,360,2.835,361,3.361,362,1.666,372,1.828,390,2.683,391,2.683,401,1.591,405,1.361,406,1.361,450,2.249,532,1.898,533,3.342,534,3.876,535,3.876,536,3.876,537,3.876,538,3.876,539,3.876,540,3.876,541,3.876,542,3.876,543,3.876,544,3.876,545,4.213,546,3.342,547,3.342,548,2.364,549,3.342,550,2.364,551,2.683,552,3.342,553,1.924,554,3.342,555,3.342,556,2.364,557,3.342,558,2.364,559,3.342,560,3.342,561,3.342,562,3.342,563,5.323,564,2.364,565,5.284,566,2.364,567,4.614,568,2.364,569,3.342,570,3.342,571,2.364,572,2.364,573,2.364,574,3.342,575,2.364,576,2.364,577,3.342,578,2.364,579,2.683,580,2.364,581,2.364,582,1.591,583,2.364,584,1.898,585,2.364,586,2.364,587,2.364,588,2.364,589,2.364,590,2.364,591,2.364,592,2.364,593,2.364,594,2.364,595,2.364,596,2.364,597,2.364,598,2.364,599,2.364]],["title/classes/Filter.html",[49,0.025,211,0.874]],["body/classes/Filter.html",[2,0.669,3,0.327,4,0.259,5,0.259,9,0.055,27,0.196,32,0.47,48,0.327,49,0.024,50,0.026,51,0.035,52,0.026,53,1.142,55,0.701,59,0.547,60,2.684,63,2.337,64,0.654,65,1.768,67,3.543,70,3.543,73,2.891,76,2.891,78,0.399,80,1.686,81,0.977,82,1.671,83,0.775,85,0.67,86,0.548,87,0.607,88,0.67,95,0.745,96,0.745,105,0.866,114,2.379,115,0.447,116,1.18,117,2.891,124,2.891,128,0.866,129,1.18,131,2.364,132,3.296,136,0.745,192,1.516,197,2.542,211,1.774,227,1.142,372,1.563,381,3.993,420,2.423,443,3.543,525,2.97,553,2.364,600,2.114,601,2.114,602,4.414,603,3.602,604,3.602,605,3.602,606,2.891,607,3.602,608,4.414,609,2.633,610,4.414,611,2.633,612,2.633,613,5.352,614,2.633,615,2.633,616,2.633,617,3.602,618,2.633,619,3.602,620,2.633,621,4.105]],["title/classes/Link.html",[49,0.025,82,1.001]],["body/classes/Link.html",[0,0.385,2,0.298,3,0.298,4,0.236,5,0.236,9,0.055,27,0.178,32,0.514,48,0.298,49,0.022,50,0.023,51,0.033,52,0.023,53,1.04,55,0.703,59,0.512,61,1.334,62,1.04,64,0.612,65,1.78,68,2.853,74,2.271,78,0.364,79,2.271,80,1.8,81,0.941,82,1.841,83,0.782,85,0.678,86,0.555,87,0.614,88,0.678,89,2.586,90,2.173,95,0.841,96,0.769,99,1.4,105,0.882,114,2.423,115,0.526,116,1.218,119,2.271,128,0.882,129,1.218,130,2.628,136,0.841,348,2.628,372,1.464,445,3.403,529,4.212,579,3.903,582,2.271,622,1.925,623,5.247,624,3.906,625,3.906,626,4.239,627,4.239,628,4.239,629,3.375,630,3.375,631,3.375,632,4.942,633,4.942,634,3.375,635,4.635,636,2.397,637,2.397,638,2.271,639,2.397,640,2.397,641,2.397,642,2.397,643,2.397,644,3.375,645,2.397,646,3.375,647,2.397,648,3.375,649,2.397,650,2.397,651,3.906,652,3.906,653,3.906]],["title/classes/Module.html",[0,0.196,49,0.025]],["body/classes/Module.html",[0,0.392,3,0.273,4,0.216,5,0.216,8,0.399,9,0.055,27,0.163,32,0.484,48,0.273,49,0.02,50,0.021,51,0.031,52,0.021,53,0.954,55,0.735,59,0.482,61,1.223,62,2.306,64,0.576,65,1.788,68,2.743,69,3.273,74,2.135,75,2.548,78,0.334,79,2.135,80,1.744,81,0.967,82,1.905,83,0.786,85,0.683,86,0.61,87,0.618,88,0.683,89,2.45,90,2.133,93,1.582,95,0.74,96,0.74,99,1.048,105,0.892,114,2.45,115,0.625,116,1.242,119,2.135,121,2.548,123,1.769,128,0.879,129,1.172,130,2.505,135,2.989,136,0.784,177,2.22,305,2.369,326,2.032,327,2.22,372,1.377,502,2.348,531,2.505,638,2.135,654,1.765,655,3.173,656,4.504,657,2.743,658,5.279,659,3.273,660,4.077,661,4.077,662,3.173,663,3.173,664,3.173,665,3.173,666,4.916,667,3.173,668,2.199,669,2.199,670,2.199,671,3.173,672,2.199,673,2.199,674,2.199,675,2.199,676,2.199,677,4.077,678,2.199,679,3.173,680,2.199,681,3.173,682,3.173,683,2.199,684,3.173,685,2.199,686,2.199,687,3.173,688,2.199,689,3.723,690,3.173]],["title/components/ModuleCreatorPageComponent.html",[23,1.001,37,0.565]],["body/components/ModuleCreatorPageComponent.html",[0,0.398,3,0.298,4,0.236,5,0.236,8,0.709,9,0.055,11,0.597,16,0.909,18,2.321,21,0.909,22,1.042,23,1.607,25,2.575,26,0.909,27,0.251,28,1.928,32,0.456,36,2.228,37,0.955,39,0.793,48,0.298,49,0.022,50,0.023,51,0.033,52,0.023,55,0.513,59,0.513,63,1.042,64,0.613,78,0.644,81,0.613,83,0.644,85,0.364,86,0.485,87,0.42,88,0.364,95,0.436,96,0.436,99,1.633,105,0.613,115,0.298,116,0.971,128,0.436,129,1.333,136,0.436,137,1.684,138,1.383,139,1.383,140,1.383,141,1.383,143,1.197,144,1.946,145,1.946,146,2.251,147,1.383,148,2.671,149,2.311,150,1.946,151,2.251,152,1.946,153,1.946,160,1.383,161,3.406,162,3.121,177,2.174,184,1.946,185,1.383,188,1.946,192,1.946,208,1.684,228,1.383,236,1.197,238,0.909,240,1.607,248,1.928,249,1.928,258,1.696,259,1.928,260,1.928,261,2.713,263,1.197,279,1.383,280,1.946,281,1.946,282,1.383,283,1.946,284,2.713,285,2.713,286,1.383,287,1.383,288,2.251,289,1.383,290,2.251,291,1.383,292,2.744,293,2.443,294,2.251,295,1.383,296,1.383,297,2.251,298,1.946,299,1.383,300,1.946,301,1.383,302,1.383,303,1.383,304,1.383,305,1.949,306,2.251,307,2.251,308,2.251,309,2.671,310,2.251,311,1.383,312,1.383,313,1.383,314,1.946,315,1.383,316,1.383,317,1.383,318,1.383,319,1.383,320,1.928,321,1.928,322,1.928,323,1.928,324,1.928,325,1.928,326,1.197,327,1.042,328,1.928,329,2.713,330,1.946,331,1.383,332,1.383,333,1.383,334,1.383,335,1.197,336,1.946,337,1.946,338,1.383,339,2.443,340,1.383,341,2.251,342,1.383,343,1.383,372,1.042,374,2.274,447,2.713,502,1.946,531,2.274,691,3.009,692,2.402,693,2.115,694,3.379,695,3.379,696,3.91,697,3.379,698,3.379,699,2.402,700,4.638,701,2.402,702,3.379,703,3.379,704,3.91,705,3.379,706,3.379,707,3.379,708,1.928,709,2.402,710,1.928,711,2.402,712,2.402,713,3.379,714,2.402,715,2.402,716,2.402,717,1.928,718,2.402]],["title/injectables/ModuleFetcherService.html",[344,0.76,693,1.318]],["body/injectables/ModuleFetcherService.html",[0,0.398,2,0.562,3,0.348,4,0.276,5,0.276,8,0.857,9,0.055,11,0.697,27,0.208,32,0.37,39,1.4,48,0.348,49,0.026,50,0.027,51,0.037,52,0.027,55,0.687,56,2.163,59,0.57,61,1.126,64,0.682,78,0.57,80,1.4,81,0.822,83,0.738,85,0.687,86,0.562,87,0.603,88,0.687,89,1.872,90,1.63,95,0.508,96,0.508,105,0.822,115,0.466,128,0.822,136,0.916,154,2.112,208,2.631,227,1.965,238,1.88,240,1.788,264,2.257,344,1.08,345,1.396,346,1.885,347,3.016,348,2.528,349,2.974,350,2.574,351,3.902,359,1.885,360,3.047,361,3.271,362,2.257,364,2.528,365,2.528,366,3.016,367,3.902,370,3.902,371,2.423,373,3.635,374,3.439,382,2.528,383,2.249,396,3.402,397,3.016,398,1.885,399,1.885,400,2.249,401,1.885,402,2.249,405,1.613,406,1.613,407,3.016,410,2.249,413,2.249,606,3.016,693,1.872,719,3.756,720,3.756,721,4.528,722,3.756,723,3.756,724,3.756,725,2.802,726,3.756,727,3.756,728,3.756,729,2.802,730,3.756,731,2.802,732,2.802,733,2.802,734,2.802,735,2.802,736,2.802]],["title/components/ModuleIndexPageComponent.html",[26,1.001,37,0.565]],["body/components/ModuleIndexPageComponent.html",[0,0.404,2,0.484,3,0.248,4,0.197,5,0.197,8,0.79,9,0.055,11,0.497,16,0.757,18,1.284,21,0.757,22,0.868,23,0.757,25,2.665,26,1.475,27,0.398,32,0.525,36,2.246,37,0.963,39,0.978,42,0.996,48,0.248,49,0.019,50,0.02,51,0.029,52,0.02,55,0.631,59,0.449,60,1.475,61,0.736,63,1.805,64,0.537,65,1.164,78,0.591,83,0.684,85,0.535,86,0.516,87,0.541,88,0.535,93,1.757,95,0.537,96,0.537,99,1.374,105,0.64,109,2.809,115,0.516,116,1.013,128,0.755,129,1.195,136,0.363,137,1.475,138,1.151,139,1.151,140,1.151,141,1.151,143,0.996,144,1.705,145,1.705,146,2.03,147,1.151,148,2.508,149,2.171,150,1.705,151,2.03,152,1.705,153,1.705,156,2.508,160,2.244,165,1.345,166,1.691,167,1.805,168,1.345,170,2.372,182,1.705,183,2.244,184,1.705,185,1.705,188,1.705,197,1.151,200,1.151,211,1.287,214,1.151,220,1.992,228,1.151,234,1.605,235,0.996,236,0.996,238,0.757,239,1.345,240,0.757,241,1.345,258,1.805,262,1.345,263,0.996,279,1.151,280,1.705,281,1.705,282,1.151,283,1.705,286,1.151,287,1.151,288,2.03,289,1.151,290,2.03,291,1.151,292,2.508,293,1.705,294,2.03,295,1.151,296,1.151,297,2.03,298,1.151,299,1.151,300,1.705,301,1.151,302,1.705,303,1.705,304,1.151,305,1.942,306,2.03,307,2.03,308,2.03,309,2.508,310,2.03,311,1.151,312,1.151,313,1.151,314,1.151,315,1.151,316,1.151,317,1.151,318,1.151,319,1.151,326,0.996,327,1.529,330,1.705,331,1.151,332,1.151,333,1.151,334,1.151,335,0.996,336,1.705,337,1.705,338,1.151,339,2.244,340,1.151,341,2.03,342,1.151,343,1.151,364,1.345,371,0.996,420,2.372,426,2.376,438,1.345,440,2.376,444,1.992,463,2.244,467,1.605,468,1.605,472,1.605,473,1.345,479,3.414,490,2.376,491,2.376,492,2.376,493,2.376,494,2.376,496,2.376,497,1.605,498,2.376,499,1.605,500,1.605,501,1.605,502,1.151,503,2.376,504,1.605,505,2.376,506,1.605,507,1.605,508,1.605,509,1.605,510,1.605,511,1.605,512,1.605,513,1.605,514,1.605,515,2.376,516,1.345,517,1.605,518,1.605,519,1.605,657,2.372,691,3.114,708,1.605,710,2.376,717,1.605,737,3.525,738,3.525,739,2.96,740,2.96,741,4.159,742,2.96,743,2.96,744,1.999,745,1.999,746,2.96,747,2.96,748,1.999,749,3.896,750,2.376,751,2.376,752,2.83,753,2.96,754,2.96,755,1.999,756,1.999,757,1.999,758,3.896,759,3.525,760,1.605,761,1.999,762,1.999,763,1.605,764,1.999,765,1.605,766,1.999,767,1.999,768,1.999,769,1.999,770,2.376]],["title/injectables/ModuleStoreService.html",[167,1.147,344,0.76]],["body/injectables/ModuleStoreService.html",[0,0.402,2,0.634,3,0.472,4,0.224,5,0.224,8,0.689,9,0.055,11,0.567,27,0.363,42,1.136,48,0.283,49,0.021,50,0.022,51,0.032,52,0.022,55,0.576,59,0.494,61,1.233,64,0.591,78,0.576,80,1.255,81,0.899,83,0.781,85,0.576,86,0.639,87,0.623,88,0.576,95,0.591,96,0.591,99,1.369,105,0.689,115,0.514,116,0.936,123,1.413,128,0.591,129,0.655,136,0.689,156,2.187,167,1.798,172,2.613,177,2.248,178,3.327,179,2.788,183,2.386,200,1.875,214,2.187,227,1.798,236,1.136,238,1.934,240,1.438,258,2.036,263,1.622,264,1.136,327,1.798,344,0.936,345,1.136,349,2.386,350,2.065,365,2.788,371,1.136,382,2.191,389,2.191,399,1.533,405,1.312,406,1.312,444,2.788,450,2.191,463,1.875,473,1.533,479,3.408,525,2.788,584,1.829,601,2.613,657,1.533,659,2.613,693,2.065,750,2.613,751,2.613,752,2.613,760,1.829,763,3.049,765,3.327,770,1.829,771,1.829,772,3.255,773,3.255,774,4.144,775,3.255,776,4.144,777,3.798,778,3.798,779,3.798,780,3.798,781,3.798,782,3.798,783,3.798,784,4.144,785,3.255,786,2.279,787,3.255,788,3.255,789,3.255,790,3.255,791,3.255,792,2.279,793,3.255,794,3.255,795,2.279,796,3.255,797,3.255,798,3.255,799,3.255,800,3.255,801,2.279,802,3.255,803,3.255,804,3.255,805,4.558,806,3.255,807,2.279,808,3.255,809,3.255,810,3.255,811,2.279,812,2.279,813,4.558,814,2.279,815,2.279,816,3.255,817,3.255,818,2.279,819,2.279,820,3.255,821,3.255,822,2.279,823,2.279,824,2.279,825,2.279,826,2.279,827,2.279,828,2.279,829,2.279,830,2.279,831,2.279,832,2.279,833,2.279,834,2.279,835,2.279,836,2.279,837,2.279,838,2.279,839,2.279,840,2.279,841,2.279,842,1.829,843,2.279,844,2.279,845,2.279,846,2.279]],["title/coverage.html",[847,2.9]],["body/coverage.html",[0,0.276,5,0.365,9,0.054,16,1.405,18,2.181,19,2.588,21,1.405,22,1.95,23,1.405,25,2.588,26,1.405,27,0.334,32,0.365,37,1.074,49,0.048,50,0.036,51,0.044,52,0.036,54,2.979,82,1.405,87,0.461,90,1.61,115,0.461,142,3.025,143,2.505,166,1.61,167,1.61,211,1.226,235,1.85,238,1.702,344,1.444,346,3.025,362,1.85,438,2.497,520,2.497,521,2.979,532,2.979,600,2.979,622,2.979,654,2.979,691,3.025,693,1.85,771,2.979,847,2.979,848,3.711,849,3.711,850,5.473,851,4.495,852,4.495,853,3.711,854,3.711,855,3.711,856,3.711,857,3.711,858,3.711,859,3.711,860,3.711,861,3.711,862,3.711]],["title/dependencies.html",[863,2.207,864,2.141]],["body/dependencies.html",[9,0.054,11,1.006,15,3.246,50,0.04,51,0.046,52,0.04,398,2.721,842,3.246,864,2.721,865,4.043,866,5.335,867,4.73,868,4.73,869,3.246,870,4.043,871,4.73,872,4.73,873,4.043,874,3.246,875,4.043,876,4.043,877,4.043,878,4.043,879,4.043,880,4.043,881,4.043,882,4.043,883,4.043]],["title/index.html",[27,0.164,884,2.207,885,2.207]],["body/index.html",[4,0.372,9,0.044,37,1.042,50,0.037,51,0.044,52,0.037,56,2.808,86,0.47,115,0.47,149,1.886,197,2.179,212,3.037,216,2.546,221,3.037,350,2.521,477,3.651,516,2.546,551,3.037,553,2.179,582,2.546,869,3.914,874,4.266,886,3.784,887,4.548,888,3.784,889,3.784,890,3.784,891,3.784,892,4.548,893,5.175,894,3.784,895,3.784,896,3.784,897,3.784,898,3.784,899,3.784,900,3.784,901,4.876,902,4.876,903,3.784,904,5.175,905,3.784,906,3.784,907,3.784,908,3.784,909,3.784,910,3.784,911,4.548,912,4.548,913,5.059,914,4.548,915,3.784,916,3.784,917,3.784,918,3.784,919,4.876,920,3.784,921,3.784]],["title/modules.html",[2,0.448]],["body/modules.html",[1,2.898,2,0.535,9,0.048,50,0.042,51,0.048,52,0.042,463,2.48,922,4.307,923,4.307]],["title/overview.html",[924,2.9]],["body/overview.html",[0,0.359,9,0.047,47,3.377,50,0.041,51,0.047,52,0.041,53,1.825,137,2.097,335,2.097,345,2.097,427,3.377,553,2.422,638,2.831,864,2.831,924,3.377,925,4.207,926,4.207,927,4.207,928,4.84,929,4.84,930,4.207]]],"invertedIndex":[["",{"_index":9,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":99,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["0.2",{"_index":285,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["0.3s",{"_index":287,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["0.8.26",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["0px",{"_index":315,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["1",{"_index":638,"title":{},"body":{"classes/Link.html":{},"classes/Module.html":{},"overview.html":{}}}],["10",{"_index":319,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["10/10",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":291,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["15/15",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":333,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["16px",{"_index":300,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["17/17",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":503,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["2",{"_index":501,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["2.0.6",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["2.20.0",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["20/20",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":317,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["20px",{"_index":298,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["20rem",{"_index":321,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["245",{"_index":329,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["2px",{"_index":303,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["3.3.13",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":334,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["3px",{"_index":507,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["4",{"_index":929,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":282,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["5",{"_index":930,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":313,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["6.3.3",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["7.3.8",{"_index":890,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":304,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["72a4c2",{"_index":845,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["8/8",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":289,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["8px",{"_index":283,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["_",{"_index":277,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["_~:/?#[\\]@!$&'()*+,;=]*(&[\\w",{"_index":275,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["_~:/?#[\\]@!$&'()*+,;=]*)*)?(#[\\w",{"_index":276,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["_~:/?#[\\]@!$&'()*+,;=]+(\\.[\\w",{"_index":272,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["_~:/?#[\\]@!$&'()*+,;=]+)?)*(\\?|\\?[\\w",{"_index":273,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["_~:/?#[\\]@!$&'()*+,;=]+=[\\w",{"_index":274,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["a.id",{"_index":474,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["a.subject.tolowercase",{"_index":834,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["a.title",{"_index":769,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["access",{"_index":776,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["accessible",{"_index":533,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["actual_component",{"_index":343,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["add",{"_index":560,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["added",{"_index":294,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["affiliation",{"_index":623,"title":{},"body":{"classes/Link.html":{}}}],["against",{"_index":608,"title":{},"body":{"classes/Filter.html":{}}}],["alert",{"_index":709,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["alert(\"failed",{"_index":263,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["alert(\"no",{"_index":470,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["alert('invalid",{"_index":251,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["alert('please",{"_index":248,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["alert('response",{"_index":262,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["alert('successfully",{"_index":259,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["alert('there",{"_index":714,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["align",{"_index":307,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["allowed",{"_index":613,"title":{},"body":{"classes/Filter.html":{}}}],["allows",{"_index":429,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["alphabetical",{"_index":805,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["alphabetically",{"_index":832,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["already",{"_index":717,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["angular",{"_index":56,"title":{},"body":{"classes/Content.html":{},"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{},"index.html":{}}}],["angular/common",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":401,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{}}}],["angular/compiler",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":11,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":15,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":149,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"index.html":{}}}],["application",{"_index":205,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["application/json",{"_index":397,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["approutingmodule",{"_index":1,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["array",{"_index":123,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Module.html":{},"injectables/ModuleStoreService.html":{}}}],["artifacts",{"_index":905,"title":{},"body":{"index.html":{}}}],["auto",{"_index":293,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["automatically",{"_index":221,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"index.html":{}}}],["available",{"_index":463,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"modules.html":{}}}],["b",{"_index":473,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["b.id",{"_index":475,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["b9b9ba",{"_index":846,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["back",{"_index":349,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["backend",{"_index":797,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["background",{"_index":326,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["base",{"_index":559,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["based",{"_index":793,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["baseurl",{"_index":534,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["basic",{"_index":788,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["being",{"_index":525,"title":{},"body":{"classes/ContentWrapper.html":{},"classes/Filter.html":{},"injectables/ModuleStoreService.html":{}}}],["between",{"_index":348,"title":{},"body":{"injectables/ContentFetcherService.html":{},"classes/Link.html":{},"injectables/ModuleFetcherService.html":{}}}],["betwwen",{"_index":453,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["bg",{"_index":681,"title":{},"body":{"classes/Module.html":{}}}],["black",{"_index":509,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["body",{"_index":407,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["boolean",{"_index":200,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["bootstrap",{"_index":926,"title":{},"body":{"overview.html":{}}}],["border",{"_index":505,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["bottom",{"_index":316,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["box",{"_index":280,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["browse",{"_index":923,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["bss",{"_index":789,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["btn",{"_index":330,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["bubble",{"_index":498,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["build",{"_index":904,"title":{},"body":{"index.html":{}}}],["button",{"_index":223,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["c",{"_index":825,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["call",{"_index":703,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["cantbenull",{"_index":242,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["cantbenull.includes(null",{"_index":245,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["cantbenull.includes(undefined",{"_index":246,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["card",{"_index":279,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["card:hover",{"_index":299,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["cell",{"_index":499,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["center",{"_index":309,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["change",{"_index":582,"title":{},"body":{"injectables/EndpointsService.html":{},"classes/Link.html":{},"index.html":{}}}],["check",{"_index":197,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"classes/Filter.html":{},"components/ModuleIndexPageComponent.html":{},"index.html":{}}}],["choose",{"_index":389,"title":{},"body":{"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["class",{"_index":49,"title":{"classes/Content.html":{},"classes/ContentWrapper.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{}}}],["classes",{"_index":53,"title":{},"body":{"classes/Content.html":{},"classes/ContentWrapper.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"overview.html":{}}}],["clears",{"_index":187,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["cli",{"_index":869,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["clicked",{"_index":462,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["clicks",{"_index":753,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["client",{"_index":366,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["cmsforce",{"_index":886,"title":{},"body":{"index.html":{}}}],["code",{"_index":216,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"index.html":{}}}],["collections",{"_index":774,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["color",{"_index":327,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["common",{"_index":655,"title":{},"body":{"classes/Module.html":{}}}],["comparison",{"_index":817,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["component",{"_index":37,"title":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":340,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["components",{"_index":137,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"overview.html":{}}}],["components/content",{"_index":17,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/module",{"_index":24,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["connected",{"_index":677,"title":{},"body":{"classes/Module.html":{}}}],["console.log('failed",{"_index":599,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["console.log(response",{"_index":598,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["const",{"_index":29,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constants/endpoints.service",{"_index":402,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["constructor",{"_index":78,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["constructor(content",{"_index":523,"title":{},"body":{"classes/ContentWrapper.html":{}}}],["constructor(cs",{"_index":165,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["constructor(http",{"_index":359,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{}}}],["constructor(id",{"_index":79,"title":{},"body":{"classes/Content.html":{},"classes/Link.html":{},"classes/Module.html":{}}}],["constructor(mf",{"_index":692,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["constructor(ms",{"_index":786,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["constructor(private",{"_index":584,"title":{},"body":{"injectables/EndpointsService.html":{},"injectables/ModuleStoreService.html":{}}}],["constructor(title",{"_index":604,"title":{},"body":{"classes/Filter.html":{}}}],["container",{"_index":301,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["containing",{"_index":391,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{}}}],["contains",{"_index":91,"title":{},"body":{"classes/Content.html":{}}}],["content",{"_index":32,"title":{"classes/Content.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["content's",{"_index":443,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{}}}],["content.description",{"_index":493,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["content.format",{"_index":492,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["content.id",{"_index":490,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["content.links",{"_index":481,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["content.links.sort",{"_index":482,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["content.title",{"_index":491,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["content.url",{"_index":494,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["content/${id",{"_index":567,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["content/${id}/modules",{"_index":577,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["contentcreatorpagecomponent",{"_index":16,"title":{"components/ContentCreatorPageComponent.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["contentfetcherservice",{"_index":166,"title":{"injectables/ContentFetcherService.html":{}},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["contentfinderpagecomponent",{"_index":21,"title":{"components/ContentFinderPageComponent.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["contentid",{"_index":624,"title":{},"body":{"classes/Link.html":{}}}],["contents",{"_index":420,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{},"components/ModuleIndexPageComponent.html":{}}}],["contentvisible",{"_index":737,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["contentwrapper",{"_index":520,"title":{"classes/ContentWrapper.html":{}},"body":{"classes/ContentWrapper.html":{},"coverage.html":{}}}],["control",{"_index":325,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["coverage",{"_index":847,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crator",{"_index":695,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["create",{"_index":372,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["create_new_content",{"_index":535,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["create_new_module",{"_index":536,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["created",{"_index":658,"title":{},"body":{"classes/Module.html":{}}}],["createnewcontent",{"_index":352,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["createnewcontent(content",{"_index":368,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["createnewmodule",{"_index":719,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["createnewmodule(module",{"_index":724,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["creater",{"_index":169,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["creates",{"_index":175,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["creating",{"_index":704,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["creation",{"_index":684,"title":{},"body":{"classes/Module.html":{}}}],["creator",{"_index":18,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["cs",{"_index":170,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["d5d5d5",{"_index":504,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["data",{"_index":601,"title":{},"body":{"classes/Filter.html":{},"injectables/ModuleStoreService.html":{}}}],["date",{"_index":666,"title":{},"body":{"classes/Module.html":{}}}],["debugging",{"_index":727,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["declarations",{"_index":925,"title":{},"body":{"overview.html":{}}}],["default",{"_index":95,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["defined",{"_index":83,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["defualt",{"_index":458,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["delete",{"_index":569,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["delete_content_by_id",{"_index":537,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["deletecontentbyid",{"_index":353,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["deletecontentbyid(id",{"_index":375,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["dependencies",{"_index":864,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["depreciated",{"_index":522,"title":{},"body":{"classes/ContentWrapper.html":{}}}],["describe",{"_index":656,"title":{},"body":{"classes/Module.html":{}}}],["description",{"_index":55,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["determine",{"_index":794,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["determining",{"_index":378,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["dev",{"_index":895,"title":{},"body":{"index.html":{}}}],["development",{"_index":891,"title":{},"body":{"index.html":{}}}],["direct",{"_index":775,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["directive",{"_index":338,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["directives",{"_index":342,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":903,"title":{},"body":{"index.html":{}}}],["directory",{"_index":908,"title":{},"body":{"index.html":{}}}],["display",{"_index":305,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["dist",{"_index":907,"title":{},"body":{"index.html":{}}}],["document",{"_index":217,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["documentation",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":140,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["done",{"_index":762,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["dropdown",{"_index":184,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["dynamic",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":252,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["e2e",{"_index":916,"title":{},"body":{"index.html":{}}}],["each",{"_index":220,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["easy",{"_index":804,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["edit",{"_index":388,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["element",{"_index":337,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["enabled",{"_index":44,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enabletracing",{"_index":41,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":350,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{},"index.html":{}}}],["endpoint",{"_index":565,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["endpoints",{"_index":361,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{}}}],["endpointsservice",{"_index":362,"title":{"injectables/EndpointsService.html":{}},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{},"coverage.html":{}}}],["entered",{"_index":40,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["env",{"_index":562,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["environment",{"_index":580,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["environment.cms_url",{"_index":557,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["environments/environment",{"_index":581,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["etc",{"_index":231,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["ex",{"_index":230,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["execute",{"_index":914,"title":{},"body":{"index.html":{}}}],["exist",{"_index":718,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["export",{"_index":48,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["exports",{"_index":47,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extraoptions",{"_index":14,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fa",{"_index":515,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["failure",{"_index":716,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["false",{"_index":42,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["fetch",{"_index":430,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["fetcher",{"_index":171,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["fetcher.service",{"_index":236,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["fetcher.service.ts",{"_index":346,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{},"coverage.html":{}}}],["fetcher.service.ts:13",{"_index":723,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["fetcher.service.ts:17",{"_index":363,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["fetcher.service.ts:28",{"_index":729,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["fetcher.service.ts:33",{"_index":369,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["fetcher.service.ts:36",{"_index":731,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["fetcher.service.ts:41",{"_index":383,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["fetcher.service.ts:48",{"_index":385,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["fetcher.service.ts:49",{"_index":725,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["fetcher.service.ts:57",{"_index":387,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["fetcher.service.ts:63",{"_index":393,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["fetcher.service.ts:72",{"_index":376,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["fetcher.service.ts:80",{"_index":380,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["fetches",{"_index":741,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["field",{"_index":700,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["fields",{"_index":189,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{}}}],["files",{"_index":899,"title":{},"body":{"index.html":{}}}],["fill",{"_index":249,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["filled",{"_index":199,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["fills",{"_index":802,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["filter",{"_index":211,"title":{"classes/Filter.html":{}},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["filter_content",{"_index":538,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["filtercontent",{"_index":354,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["filtercontent(filter",{"_index":379,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["filtered",{"_index":381,"title":{},"body":{"injectables/ContentFetcherService.html":{},"classes/Filter.html":{}}}],["find",{"_index":461,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["finder",{"_index":22,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["fkcontent",{"_index":632,"title":{},"body":{"classes/Link.html":{}}}],["fkmodule",{"_index":633,"title":{},"body":{"classes/Link.html":{}}}],["flag",{"_index":516,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"index.html":{}}}],["flag:hover",{"_index":518,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["flex",{"_index":306,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["float",{"_index":295,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["form",{"_index":324,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["format",{"_index":60,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{},"components/ModuleIndexPageComponent.html":{}}}],["formats",{"_index":155,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["found",{"_index":92,"title":{},"body":{"classes/Content.html":{},"components/ContentFinderPageComponent.html":{}}}],["ftp://www.example.com",{"_index":254,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["full",{"_index":34,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":437,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["further",{"_index":918,"title":{},"body":{"index.html":{}}}],["generate",{"_index":901,"title":{},"body":{"index.html":{}}}],["generated",{"_index":888,"title":{},"body":{"index.html":{}}}],["generates",{"_index":222,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["get_all_content",{"_index":539,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["get_all_modules",{"_index":540,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["get_content_by_id",{"_index":541,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["get_module_by_id",{"_index":542,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["getaffiliation",{"_index":626,"title":{},"body":{"classes/Link.html":{}}}],["getallcontent",{"_index":355,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["getallendpoints",{"_index":545,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["getallfakemodules",{"_index":720,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["getallfakemodules(url",{"_index":726,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["getallmodules",{"_index":721,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["getcolor",{"_index":659,"title":{},"body":{"classes/Module.html":{},"injectables/ModuleStoreService.html":{}}}],["getcolor(index",{"_index":791,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["getcontentbyid",{"_index":356,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["getcontentbyid(id",{"_index":384,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["getcreated",{"_index":660,"title":{},"body":{"classes/Module.html":{}}}],["getdescription",{"_index":66,"title":{},"body":{"classes/Content.html":{}}}],["getfkcontent",{"_index":627,"title":{},"body":{"classes/Link.html":{}}}],["getfkmodule",{"_index":628,"title":{},"body":{"classes/Link.html":{}}}],["getformat",{"_index":67,"title":{},"body":{"classes/Content.html":{},"classes/Filter.html":{}}}],["getid",{"_index":68,"title":{},"body":{"classes/Content.html":{},"classes/Link.html":{},"classes/Module.html":{}}}],["getidsfromsubjects",{"_index":424,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["getidsfromsubjects(subjects",{"_index":431,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["getlinks",{"_index":69,"title":{},"body":{"classes/Content.html":{},"classes/Module.html":{}}}],["getlinksfromsubjects",{"_index":159,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["getlinksfromsubjects(subjects",{"_index":173,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["getmodulebyid",{"_index":722,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["getmodulebyid(id",{"_index":730,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["getmodules",{"_index":602,"title":{},"body":{"classes/Filter.html":{}}}],["gets",{"_index":433,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["getsubject",{"_index":661,"title":{},"body":{"classes/Module.html":{}}}],["getting",{"_index":884,"title":{"index.html":{}},"body":{}}],["gettitle",{"_index":70,"title":{},"body":{"classes/Content.html":{},"classes/Filter.html":{}}}],["geturl",{"_index":71,"title":{},"body":{"classes/Content.html":{}}}],["given",{"_index":555,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["go",{"_index":920,"title":{},"body":{"index.html":{}}}],["grabs",{"_index":697,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["graph",{"_index":922,"title":{},"body":{"modules.html":{}}}],["headers",{"_index":351,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["height",{"_index":290,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["help",{"_index":919,"title":{},"body":{"index.html":{}}}],["hex",{"_index":667,"title":{},"body":{"classes/Module.html":{}}}],["hides",{"_index":459,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["home",{"_index":35,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["host",{"_index":583,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["houses",{"_index":773,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["html",{"_index":336,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["http",{"_index":208,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{}}}],["http://192.168.0.0",{"_index":255,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["http://example.com",{"_index":253,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["http://localhost:4200",{"_index":897,"title":{},"body":{"index.html":{}}}],["http[s]?|ftp):\\/\\/)(((\\w+\\.)?\\w+\\.\\w{2,})|(\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3}))(\\/[\\w",{"_index":271,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["httpclient",{"_index":360,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{}}}],["httpheaderresponse",{"_index":400,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["httpheaders",{"_index":396,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["id",{"_index":61,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Link.html":{},"classes/Module.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["id.tostring",{"_index":413,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["identifier",{"_index":90,"title":{},"body":{"classes/Content.html":{},"injectables/ContentFetcherService.html":{},"classes/Link.html":{},"classes/Module.html":{},"injectables/ModuleFetcherService.html":{},"coverage.html":{}}}],["ids",{"_index":619,"title":{},"body":{"classes/Filter.html":{}}}],["if(index%2",{"_index":844,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["ignore",{"_index":28,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["implementation",{"_index":213,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["implemented",{"_index":394,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["implements",{"_index":145,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["import",{"_index":8,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["index",{"_index":27,"title":{"index.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["information",{"_index":58,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["initialization",{"_index":182,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"components/ModuleIndexPageComponent.html":{}}}],["initialize",{"_index":364,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{}}}],["injectable",{"_index":344,"title":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{}}}],["injectables",{"_index":345,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{},"overview.html":{}}}],["input",{"_index":188,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["input[type=\"radio",{"_index":331,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["inputted",{"_index":705,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["insert",{"_index":746,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["invalid",{"_index":38,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["isloading",{"_index":777,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["items",{"_index":308,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["json",{"_index":554,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["json.stringify(content",{"_index":408,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["json.stringify(filter",{"_index":418,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["json.stringify(module",{"_index":735,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["json.stringify(modules",{"_index":415,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["justify",{"_index":310,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["karma",{"_index":915,"title":{},"body":{"index.html":{}}}],["lazy",{"_index":754,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["left",{"_index":314,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["legend",{"_index":335,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"overview.html":{}}}],["lg",{"_index":513,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["line",{"_index":500,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["link",{"_index":82,"title":{"classes/Link.html":{}},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"coverage.html":{}}}],["link's",{"_index":445,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"classes/Link.html":{}}}],["link(null",{"_index":268,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["linked",{"_index":529,"title":{},"body":{"classes/ContentWrapper.html":{},"classes/Link.html":{}}}],["linking",{"_index":94,"title":{},"body":{"classes/Content.html":{}}}],["links",{"_index":62,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"classes/Link.html":{},"classes/Module.html":{}}}],["links.push(new",{"_index":267,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["links/tag",{"_index":698,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["list",{"_index":109,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["list/array",{"_index":180,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["listcontent",{"_index":739,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["listcontent(module",{"_index":742,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["lists",{"_index":743,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["load",{"_index":183,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["loaded",{"_index":752,"title":{},"body":{"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["loading",{"_index":763,"title":{},"body":{"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["loadingtext",{"_index":778,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["loadmodules",{"_index":784,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["loads",{"_index":728,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["location",{"_index":103,"title":{},"body":{"classes/Content.html":{}}}],["logo",{"_index":318,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["lookup",{"_index":478,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["makes",{"_index":702,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["manages",{"_index":347,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["map",{"_index":479,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["mapping",{"_index":813,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["margin",{"_index":292,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["match",{"_index":610,"title":{},"body":{"classes/Filter.html":{}}}],["matches",{"_index":204,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["matching",{"_index":51,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["max",{"_index":320,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["md",{"_index":512,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["menu",{"_index":185,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["metadata",{"_index":147,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["method",{"_index":450,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleStoreService.html":{}}}],["methods",{"_index":64,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["mf",{"_index":696,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["model",{"_index":57,"title":{},"body":{"classes/Content.html":{}}}],["models/content",{"_index":403,"title":{},"body":{"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{}}}],["models/filter",{"_index":404,"title":{},"body":{"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{}}}],["models/module",{"_index":399,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["module",{"_index":0,"title":{"modules/AppRoutingModule.html":{},"classes/Module.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{},"overview.html":{}}}],["module's",{"_index":758,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["module.color",{"_index":835,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["module.id",{"_index":761,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["module.subject",{"_index":770,"title":{},"body":{"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["module/${id",{"_index":574,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["modulecontents",{"_index":738,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["modulecreatorpagecomponent",{"_index":23,"title":{"components/ModuleCreatorPageComponent.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["modulefetcherservice",{"_index":693,"title":{"injectables/ModuleFetcherService.html":{}},"body":{"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{}}}],["moduleid",{"_index":625,"title":{},"body":{"classes/Link.html":{}}}],["moduleids",{"_index":421,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["moduleindexpagecomponent",{"_index":26,"title":{"components/ModuleIndexPageComponent.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"modules.html":{}}}],["modules.length",{"_index":826,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["modules.sort",{"_index":833,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["modulestoreservice",{"_index":167,"title":{"injectables/ModuleStoreService.html":{}},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{}}}],["modulestoreservices's",{"_index":766,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["more",{"_index":212,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"index.html":{}}}],["ms",{"_index":156,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["ms.subjectidtoname.get(link.moduleid",{"_index":495,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["name",{"_index":86,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"index.html":{}}}],["name/subject",{"_index":707,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["names",{"_index":178,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["navigate",{"_index":896,"title":{},"body":{"index.html":{}}}],["new",{"_index":115,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":874,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngmodule",{"_index":10,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":160,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["none",{"_index":296,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["notempty",{"_index":425,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["null",{"_index":129,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["number",{"_index":80,"title":{},"body":{"classes/Content.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["object",{"_index":192,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["obs",{"_index":595,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["obs.subscribe",{"_index":597,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["observable",{"_index":374,"title":{},"body":{"injectables/ContentFetcherService.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{}}}],["obtain",{"_index":790,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["obtained",{"_index":561,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["once",{"_index":796,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["oninit",{"_index":146,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["optional",{"_index":88,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["options",{"_index":607,"title":{},"body":{"classes/Filter.html":{}}}],["orange",{"_index":519,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["order",{"_index":444,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["ordering",{"_index":806,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["out",{"_index":553,"title":{},"body":{"injectables/EndpointsService.html":{},"classes/Filter.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":322,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["overview",{"_index":924,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":863,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":302,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["page",{"_index":36,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["page'},{'name",{"_index":341,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["page.component",{"_index":20,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":151,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["page.component.html",{"_index":153,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["page.component.ts",{"_index":143,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:107",{"_index":441,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:109",{"_index":186,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["page.component.ts:124",{"_index":174,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["page.component.ts:130",{"_index":446,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:141",{"_index":436,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:142",{"_index":202,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["page.component.ts:155",{"_index":432,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:16",{"_index":694,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["page.component.ts:17",{"_index":748,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["page.component.ts:18",{"_index":219,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:21",{"_index":740,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["page.component.ts:23",{"_index":232,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:28",{"_index":233,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:30",{"_index":755,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["page.component.ts:33",{"_index":226,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:34",{"_index":701,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["page.component.ts:35",{"_index":744,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["page.component.ts:38",{"_index":215,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:43",{"_index":168,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["page.component.ts:48",{"_index":456,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:52",{"_index":224,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["page.component.ts:53",{"_index":428,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:57",{"_index":181,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["page.component.ts:62",{"_index":454,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:64",{"_index":196,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["page.component.ts:67",{"_index":435,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:69",{"_index":699,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["page.component.ts:76",{"_index":191,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["page.component.ts:83",{"_index":745,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["page/content",{"_index":19,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"coverage.html":{}}}],["page/module",{"_index":25,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":128,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["parsecontentresponse",{"_index":426,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["parsecontentresponse(response",{"_index":440,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["path",{"_index":30,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":33,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["persist",{"_index":373,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["populate",{"_index":451,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["populatecollections",{"_index":785,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["populatecollections(modules",{"_index":800,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["populated",{"_index":193,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["populates",{"_index":434,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["position",{"_index":311,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["powerpoint",{"_index":218,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["preset",{"_index":439,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["print",{"_index":452,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["printing",{"_index":552,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["printjson",{"_index":546,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["printjson(uri",{"_index":549,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["private",{"_index":240,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["problem",{"_index":715,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["prod",{"_index":909,"title":{},"body":{"index.html":{}}}],["production",{"_index":910,"title":{},"body":{"index.html":{}}}],["program",{"_index":798,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["project",{"_index":887,"title":{},"body":{"index.html":{}}}],["properties",{"_index":59,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["protocol",{"_index":206,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["protractor",{"_index":917,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":405,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["providers",{"_index":927,"title":{},"body":{"overview.html":{}}}],["provides",{"_index":772,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["public",{"_index":65,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleIndexPageComponent.html":{}}}],["puts",{"_index":448,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["quick",{"_index":803,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["radio",{"_index":228,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["radius",{"_index":506,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["readme",{"_index":921,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":154,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{}}}],["redirectto",{"_index":31,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regex",{"_index":210,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["regexp",{"_index":270,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["regexp.test(url",{"_index":278,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["related",{"_index":751,"title":{},"body":{"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["relative",{"_index":312,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["relaventto",{"_index":635,"title":{},"body":{"classes/Link.html":{}}}],["relevant",{"_index":843,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["reload",{"_index":898,"title":{},"body":{"index.html":{}}}],["remove",{"_index":377,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["replaced",{"_index":527,"title":{},"body":{"classes/ContentWrapper.html":{}}}],["representing",{"_index":810,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["request",{"_index":371,"title":{},"body":{"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["requests",{"_index":367,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["reset",{"_index":427,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"overview.html":{}}}],["resets",{"_index":447,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["resetvariables",{"_index":161,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["response",{"_index":258,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["response.sort",{"_index":472,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["responsive",{"_index":510,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["rest",{"_index":194,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["result",{"_index":50,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":52,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["retrieve",{"_index":760,"title":{},"body":{"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["return",{"_index":136,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["returned",{"_index":382,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["returns",{"_index":105,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["rgb(190,0,0",{"_index":517,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["rgb(245",{"_index":328,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["rgba(0",{"_index":284,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["rgba(0,0,0,0.2",{"_index":496,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["right",{"_index":332,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["root",{"_index":406,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["routermodule",{"_index":13,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":46,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":12,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":7,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":893,"title":{},"body":{"index.html":{}}}],["running",{"_index":911,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":398,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":900,"title":{},"body":{"index.html":{}}}],["scrollpositionrestoration",{"_index":43,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search",{"_index":570,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["searchedsubjects",{"_index":422,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["searching",{"_index":455,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["see",{"_index":209,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["select",{"_index":842,"title":{},"body":{"injectables/ModuleStoreService.html":{},"dependencies.html":{}}}],["select/ng",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["selected",{"_index":176,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["selectedsubjects",{"_index":157,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["selection",{"_index":229,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["selector",{"_index":148,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["selformat",{"_index":158,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["send",{"_index":264,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["sends",{"_index":370,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["sent",{"_index":260,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["serve",{"_index":894,"title":{},"body":{"index.html":{}}}],["server",{"_index":892,"title":{},"body":{"index.html":{}}}],["service",{"_index":365,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["services",{"_index":706,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["set",{"_index":114,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{}}}],["setaffiliation",{"_index":629,"title":{},"body":{"classes/Link.html":{}}}],["setaffiliation(affiliation",{"_index":644,"title":{},"body":{"classes/Link.html":{}}}],["setcolor",{"_index":662,"title":{},"body":{"classes/Module.html":{}}}],["setcolor(color",{"_index":679,"title":{},"body":{"classes/Module.html":{}}}],["setcreated",{"_index":663,"title":{},"body":{"classes/Module.html":{}}}],["setcreated(created",{"_index":682,"title":{},"body":{"classes/Module.html":{}}}],["setdescription",{"_index":72,"title":{},"body":{"classes/Content.html":{}}}],["setdescription(description",{"_index":112,"title":{},"body":{"classes/Content.html":{}}}],["setfkcontent",{"_index":630,"title":{},"body":{"classes/Link.html":{}}}],["setfkcontent(fkcontent",{"_index":646,"title":{},"body":{"classes/Link.html":{}}}],["setfkmodule",{"_index":631,"title":{},"body":{"classes/Link.html":{}}}],["setfkmodule(fkmodule",{"_index":648,"title":{},"body":{"classes/Link.html":{}}}],["setformat",{"_index":73,"title":{},"body":{"classes/Content.html":{},"classes/Filter.html":{}}}],["setformat(format",{"_index":117,"title":{},"body":{"classes/Content.html":{},"classes/Filter.html":{}}}],["setid",{"_index":74,"title":{},"body":{"classes/Content.html":{},"classes/Link.html":{},"classes/Module.html":{}}}],["setid(id",{"_index":119,"title":{},"body":{"classes/Content.html":{},"classes/Link.html":{},"classes/Module.html":{}}}],["setlinks",{"_index":75,"title":{},"body":{"classes/Content.html":{},"classes/Module.html":{}}}],["setlinks(links",{"_index":121,"title":{},"body":{"classes/Content.html":{},"classes/Module.html":{}}}],["setmodules",{"_index":603,"title":{},"body":{"classes/Filter.html":{}}}],["setmodules(modules",{"_index":617,"title":{},"body":{"classes/Filter.html":{}}}],["sets",{"_index":457,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["setsubject",{"_index":664,"title":{},"body":{"classes/Module.html":{}}}],["setsubject(subject",{"_index":687,"title":{},"body":{"classes/Module.html":{}}}],["settitle",{"_index":76,"title":{},"body":{"classes/Content.html":{},"classes/Filter.html":{}}}],["settitle(title",{"_index":124,"title":{},"body":{"classes/Content.html":{},"classes/Filter.html":{}}}],["seturl",{"_index":77,"title":{},"body":{"classes/Content.html":{}}}],["seturl(url",{"_index":126,"title":{},"body":{"classes/Content.html":{}}}],["shadow",{"_index":281,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["sm",{"_index":511,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["solid",{"_index":508,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["sort",{"_index":657,"title":{},"body":{"classes/Module.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["sortedindexa",{"_index":483,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["sortedindexb",{"_index":485,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["sortedresponse",{"_index":768,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["sorts",{"_index":442,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"index.html":{}}}],["specified",{"_index":606,"title":{},"body":{"classes/Filter.html":{},"injectables/ModuleFetcherService.html":{}}}],["src/app/app",{"_index":6,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/components/content",{"_index":142,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"coverage.html":{}}}],["src/app/components/module",{"_index":691,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["src/app/constants/endpoints.service.ts",{"_index":532,"title":{},"body":{"injectables/EndpointsService.html":{},"coverage.html":{}}}],["src/app/constants/endpoints.service.ts:11",{"_index":558,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:14",{"_index":564,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:16",{"_index":571,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:18",{"_index":573,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:20",{"_index":576,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:22",{"_index":578,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:24",{"_index":568,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:26",{"_index":566,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:28",{"_index":572,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:30",{"_index":575,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:32",{"_index":547,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:38",{"_index":548,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/constants/endpoints.service.ts:55",{"_index":550,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["src/app/models/content",{"_index":234,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["src/app/models/content.ts",{"_index":54,"title":{},"body":{"classes/Content.html":{},"coverage.html":{}}}],["src/app/models/content.ts:10",{"_index":101,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:106",{"_index":118,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:114",{"_index":113,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:12",{"_index":98,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:122",{"_index":127,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:130",{"_index":122,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:14",{"_index":97,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:16",{"_index":102,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:18",{"_index":84,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:42",{"_index":107,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:50",{"_index":110,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:58",{"_index":106,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:66",{"_index":104,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:74",{"_index":111,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:8",{"_index":100,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:82",{"_index":108,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:90",{"_index":120,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/content.ts:98",{"_index":125,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/contentwrapper.ts",{"_index":521,"title":{},"body":{"classes/ContentWrapper.html":{},"coverage.html":{}}}],["src/app/models/contentwrapper.ts:10",{"_index":524,"title":{},"body":{"classes/ContentWrapper.html":{}}}],["src/app/models/contentwrapper.ts:8",{"_index":528,"title":{},"body":{"classes/ContentWrapper.html":{}}}],["src/app/models/filter",{"_index":756,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["src/app/models/filter.ts",{"_index":600,"title":{},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["src/app/models/filter.ts:11",{"_index":605,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:28",{"_index":615,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:34",{"_index":612,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:40",{"_index":614,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:47",{"_index":620,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:54",{"_index":616,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:61",{"_index":618,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:7",{"_index":611,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:9",{"_index":609,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/link",{"_index":237,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["src/app/models/link.ts",{"_index":622,"title":{},"body":{"classes/Link.html":{},"coverage.html":{}}}],["src/app/models/link.ts:10",{"_index":634,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:29",{"_index":643,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:36",{"_index":650,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:4",{"_index":637,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:42",{"_index":641,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:49",{"_index":647,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:55",{"_index":642,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:6",{"_index":636,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:62",{"_index":649,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:66",{"_index":640,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:73",{"_index":645,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/link.ts:8",{"_index":639,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/module",{"_index":708,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["src/app/models/module.ts",{"_index":654,"title":{},"body":{"classes/Module.html":{},"coverage.html":{}}}],["src/app/models/module.ts:10",{"_index":668,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:101",{"_index":680,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:12",{"_index":670,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:14",{"_index":665,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:33",{"_index":675,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:40",{"_index":678,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:47",{"_index":674,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:54",{"_index":676,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:6",{"_index":669,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:61",{"_index":673,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:69",{"_index":685,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:77",{"_index":688,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:8",{"_index":672,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:85",{"_index":683,"title":{},"body":{"classes/Module.html":{}}}],["src/app/models/module.ts:93",{"_index":686,"title":{},"body":{"classes/Module.html":{}}}],["src/app/services/content",{"_index":235,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["src/app/services/module",{"_index":238,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{}}}],["start",{"_index":799,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["started",{"_index":885,"title":{"index.html":{}},"body":{}}],["statements",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":750,"title":{},"body":{"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["still",{"_index":809,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store",{"_index":172,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["store.service",{"_index":239,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["store.service.ts",{"_index":771,"title":{},"body":{"injectables/ModuleStoreService.html":{},"coverage.html":{}}}],["store.service.ts:102",{"_index":792,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:15",{"_index":819,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:17",{"_index":812,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:19",{"_index":814,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:22",{"_index":818,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:30",{"_index":815,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:33",{"_index":811,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:35",{"_index":807,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:37",{"_index":787,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:47",{"_index":795,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["store.service.ts:66",{"_index":801,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["stored",{"_index":906,"title":{},"body":{"index.html":{}}}],["stores",{"_index":225,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["string",{"_index":81,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["styles",{"_index":139,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["styleurls",{"_index":150,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["subject",{"_index":177,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["subject's",{"_index":816,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["subject/module",{"_index":476,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["subjectidtomodule",{"_index":779,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["subjectidtoname",{"_index":780,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["subjectidtosortedindex",{"_index":781,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["subjectnames",{"_index":782,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["subjectnametomodule",{"_index":783,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["subjects",{"_index":179,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["subjects.foreach",{"_index":266,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["submit",{"_index":162,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["subscribe",{"_index":449,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["success",{"_index":713,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["successful",{"_index":190,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["such",{"_index":207,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["table",{"_index":438,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"coverage.html":{}}}],["tablebool",{"_index":423,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":502,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["tags",{"_index":93,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Module.html":{},"components/ModuleIndexPageComponent.html":{}}}],["tags/modules",{"_index":747,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["takes",{"_index":203,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["td.tag",{"_index":497,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["template",{"_index":138,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["templateurl",{"_index":152,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["test",{"_index":551,"title":{},"body":{"injectables/EndpointsService.html":{},"index.html":{}}}],["tests",{"_index":913,"title":{},"body":{"index.html":{}}}],["this.affiliation",{"_index":653,"title":{},"body":{"classes/Link.html":{}}}],["this.baseurl",{"_index":563,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.color",{"_index":690,"title":{},"body":{"classes/Module.html":{}}}],["this.content",{"_index":530,"title":{},"body":{"classes/ContentWrapper.html":{}}}],["this.contentid",{"_index":651,"title":{},"body":{"classes/Link.html":{}}}],["this.contents",{"_index":471,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.contents.foreach",{"_index":480,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.contents.length",{"_index":487,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.contentvisible.get(module",{"_index":767,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["this.contentvisible.set(module",{"_index":759,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["this.create_new_content",{"_index":585,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.create_new_module",{"_index":591,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.created",{"_index":689,"title":{},"body":{"classes/Module.html":{}}}],["this.cs.createnewcontent(content).subscribe",{"_index":257,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["this.cs.filtercontent(filter).subscribe",{"_index":467,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["this.delete_content_by_id",{"_index":590,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.description",{"_index":133,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{}}}],["this.filter_content",{"_index":594,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.format",{"_index":132,"title":{},"body":{"classes/Content.html":{},"classes/Filter.html":{}}}],["this.get_all_content",{"_index":586,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.get_all_modules",{"_index":592,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.get_content_by_id",{"_index":587,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.get_module_by_id",{"_index":593,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.getcolor(c",{"_index":836,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.getidsfromsubjects(this.selectedsubjects",{"_index":464,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.getlinksfromsubjects(this.selectedsubjects",{"_index":256,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["this.headers",{"_index":410,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/ModuleFetcherService.html":{}}}],["this.http.delete(this.endpoints.delete_content_by_id.replace('${id",{"_index":417,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["this.http.get(this.endpoints.get_all_content",{"_index":411,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["this.http.get(this.endpoints.get_all_modules",{"_index":732,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["this.http.get(this.endpoints.get_content_by_id.replace('${id",{"_index":412,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["this.http.get(this.endpoints.get_module_by_id.replace('${id",{"_index":733,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["this.http.get(uri",{"_index":596,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.http.get(url",{"_index":734,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["this.http.post(this.endpoints.create_new_content",{"_index":409,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["this.http.post(this.endpoints.create_new_module",{"_index":736,"title":{},"body":{"injectables/ModuleFetcherService.html":{}}}],["this.http.post(this.endpoints.filter_content",{"_index":419,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["this.http.put(this.endpoints.update_content_by_id.replace('${id",{"_index":414,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["this.http.put(this.endpoints.update_content_modules_by_id.replace('${id",{"_index":416,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["this.id",{"_index":130,"title":{},"body":{"classes/Content.html":{},"classes/Link.html":{},"classes/Module.html":{}}}],["this.isloading",{"_index":820,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.links",{"_index":135,"title":{},"body":{"classes/Content.html":{},"classes/Module.html":{}}}],["this.loadingtext",{"_index":821,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.mf.createnewmodule(module).subscribe",{"_index":712,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["this.modulecontents.get(module",{"_index":757,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["this.moduleid",{"_index":652,"title":{},"body":{"classes/Link.html":{}}}],["this.moduleids",{"_index":465,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.moduleids.push(this.ms.subjectnametomodule.get(subject).id",{"_index":489,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.modules",{"_index":621,"title":{},"body":{"classes/Filter.html":{}}}],["this.ms.getallmodules().subscribe",{"_index":822,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.ms.loadmodules",{"_index":241,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["this.ms.subjectidtosortedindex.get(a.moduleid",{"_index":484,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.ms.subjectidtosortedindex.get(b.moduleid",{"_index":486,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.ms.subjectnametomodule.get(subject).id",{"_index":269,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["this.notempty",{"_index":469,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.parsecontentresponse(response",{"_index":468,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["this.populatecollections(this.response",{"_index":824,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.resetvariables",{"_index":261,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["this.response",{"_index":823,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.searchedsubjects",{"_index":466,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.selectedsubjects",{"_index":265,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["this.selectedsubjects.length",{"_index":244,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["this.selformat",{"_index":243,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{}}}],["this.subject",{"_index":531,"title":{},"body":{"classes/ContentWrapper.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["this.subjectidtomodule",{"_index":828,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.subjectidtomodule.set(module.id",{"_index":838,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.subjectidtoname",{"_index":829,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.subjectidtoname.set(module.id",{"_index":839,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.subjectidtosortedindex",{"_index":830,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.subjectidtosortedindex.set(module.id",{"_index":840,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.subjectnames",{"_index":831,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.subjectnames.push(module.subject",{"_index":841,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.subjectnametomodule",{"_index":827,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.subjectnametomodule.set(module.subject",{"_index":837,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["this.tablebool",{"_index":488,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["this.title",{"_index":131,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{}}}],["this.update_content_by_id",{"_index":588,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.update_content_modules_by_id",{"_index":589,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["this.url",{"_index":134,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{}}}],["this.validinput",{"_index":247,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["this.validurl(this.url",{"_index":250,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["title",{"_index":63,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["toggle",{"_index":764,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["top",{"_index":297,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["transition",{"_index":286,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["tree",{"_index":141,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["true",{"_index":214,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["type",{"_index":87,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/ContentWrapper.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{},"coverage.html":{}}}],["types/jasmine",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["types/jasminewd2",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":144,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["undefined",{"_index":671,"title":{},"body":{"classes/Module.html":{}}}],["undefined].includes(this.subject",{"_index":711,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{}}}],["unique",{"_index":89,"title":{},"body":{"classes/Content.html":{},"injectables/ContentFetcherService.html":{},"classes/Link.html":{},"classes/Module.html":{},"injectables/ModuleFetcherService.html":{}}}],["unit",{"_index":912,"title":{},"body":{"index.html":{}}}],["untested",{"_index":395,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["until",{"_index":460,"title":{},"body":{"components/ContentFinderPageComponent.html":{}}}],["unused",{"_index":579,"title":{},"body":{"injectables/EndpointsService.html":{},"classes/Link.html":{}}}],["update",{"_index":390,"title":{},"body":{"injectables/ContentFetcherService.html":{},"injectables/EndpointsService.html":{}}}],["update_content_by_id",{"_index":543,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["update_content_modules_by_id",{"_index":544,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["updatecontentbyid",{"_index":357,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["updatecontentbyid(id",{"_index":386,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["updatecontentmodulesbyid",{"_index":358,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["updatecontentmodulesbyid(id",{"_index":392,"title":{},"body":{"injectables/ContentFetcherService.html":{}}}],["uri",{"_index":556,"title":{},"body":{"injectables/EndpointsService.html":{}}}],["url",{"_index":39,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{}}}],["use",{"_index":902,"title":{},"body":{"index.html":{}}}],["used",{"_index":227,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{},"injectables/ModuleFetcherService.html":{},"injectables/ModuleStoreService.html":{}}}],["user",{"_index":710,"title":{},"body":{"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["using",{"_index":765,"title":{},"body":{"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["valid",{"_index":198,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["validinput",{"_index":163,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["validurl",{"_index":164,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["validurl(url",{"_index":201,"title":{},"body":{"components/ContentCreatorPageComponent.html":{}}}],["value",{"_index":96,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{},"components/ContentFinderPageComponent.html":{},"injectables/EndpointsService.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"injectables/ModuleFetcherService.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["values",{"_index":195,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"injectables/ContentFetcherService.html":{}}}],["var",{"_index":339,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["version",{"_index":889,"title":{},"body":{"index.html":{}}}],["via",{"_index":477,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"index.html":{}}}],["visibility",{"_index":749,"title":{},"body":{"components/ModuleIndexPageComponent.html":{}}}],["void",{"_index":116,"title":{},"body":{"classes/Content.html":{},"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"classes/Filter.html":{},"classes/Link.html":{},"classes/Module.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{},"injectables/ModuleStoreService.html":{}}}],["whether",{"_index":808,"title":{},"body":{"injectables/ModuleStoreService.html":{}}}],["width",{"_index":288,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ContentFinderPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["wrapped",{"_index":526,"title":{},"body":{"classes/ContentWrapper.html":{}}}],["xl",{"_index":514,"title":{},"body":{"components/ContentFinderPageComponent.html":{},"components/ModuleIndexPageComponent.html":{}}}],["y",{"_index":323,"title":{},"body":{"components/ContentCreatorPageComponent.html":{},"components/ModuleCreatorPageComponent.html":{}}}],["zone.js",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":928,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\nimport { ContentCreatorPageComponent } from './components/content-creator-page/content-creator-page.component';\nimport { ContentFinderPageComponent } from './components/content-finder-page/content-finder-page.component';\nimport { ModuleCreatorPageComponent } from './components/module-creator-page/module-creator-page.component';\nimport { ModuleIndexPageComponent } from './components/module-index-page/module-index-page.component';\n\n/** @ignore */\nconst routes: Routes = [\n   { path: '', redirectTo: '/content-creator', pathMatch: 'full' },   // home page\n   { path: 'content-creator', component: ContentCreatorPageComponent, pathMatch: 'full' },\n   { path: 'finder', component: ContentFinderPageComponent, pathMatch: 'full' },\n   { path: 'module-creator', component: ModuleCreatorPageComponent, pathMatch: 'full' },\n   { path: 'module-index', component: ModuleIndexPageComponent, pathMatch: 'full' },\n   { path: '**', redirectTo: '/content-creator', pathMatch: 'full' }   // when invalid url entered\n];\n\n/** @ignore */\nconst extraOptions: ExtraOptions = {\n   enableTracing: false,\n   scrollPositionRestoration: 'enabled'\n};\n\n/** @ignore */\n@NgModule({\n   imports: [RouterModule.forRoot(routes, extraOptions)],\n   exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Content.html":{"url":"classes/Content.html","title":"class - Content","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Content\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Content.ts\n        \n\n            \n                Description\n            \n            \n                Angular model for Content information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                format\n                            \n                            \n                                id\n                            \n                            \n                                links\n                            \n                            \n                                title\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDescription\n                            \n                            \n                                    Public\n                                getFormat\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getLinks\n                            \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                getUrl\n                            \n                            \n                                    Public\n                                setDescription\n                            \n                            \n                                    Public\n                                setFormat\n                            \n                            \n                                    Public\n                                setId\n                            \n                            \n                                    Public\n                                setLinks\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                            \n                                    Public\n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, title: string, format: string, description: string, url: string, links: Link[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Content.ts:18\n                            \n                        \n\n                \n                    \n                            Angular model for Content information.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique Identifier (number)\n\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nTitle of content (string)\n\n\n                                                        \n                                                \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nWhat the content is (string)\n\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nWhat the content contains (string)\n\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nWhere the content is found (string)\n\n\n                                                        \n                                                \n                                                \n                                                        links\n                                                  \n                                                        \n                                                                        Link[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nTags linking Modules with content (Link[])\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Content.ts:14\n                            \n                        \n\n                \n                    \n                        Content Description \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[no format]'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Content.ts:12\n                            \n                        \n\n                \n                    \n                        Content Format \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Content.ts:8\n                            \n                        \n\n                \n                    \n                        Unique Identifier \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            links\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Link[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Content.ts:18\n                            \n                        \n\n                \n                    \n                        Content Module Links \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[no title]'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Content.ts:10\n                            \n                        \n\n                \n                    \n                        Title of Content \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[no url]'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Content.ts:16\n                            \n                        \n\n                \n                    \n                        Content URL Location \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:66\n                \n            \n\n\n            \n                \n                    Get Description of Content\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        description: string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:58\n                \n            \n\n\n            \n                \n                    Get Format of Content\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        format: string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:42\n                \n            \n\n\n            \n                \n                    Get unique identifier\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        id: number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLinks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLinks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:82\n                \n            \n\n\n            \n                \n                    Get List of Links of Content\n\n\n                    \n                    \n                    \n                        Returns :         Link[]\n\n                    \n                    \n                        links: Link[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:50\n                \n            \n\n\n            \n                \n                    Get Content Title\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        title: string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:74\n                \n            \n\n\n            \n                \n                    Get URL link of Content\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        url: string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDescription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDescription(description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:114\n                \n            \n\n\n            \n                \n                    Set Content Description\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew Description (string)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFormat(format: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:106\n                \n            \n\n\n            \n                \n                    Set Content Format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew Format (string)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:90\n                \n            \n\n\n            \n                \n                    Set Unique Identifier\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew Identifier (number)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLinks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLinks(links: Link[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:130\n                \n            \n\n\n            \n                \n                    Set Content Links\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    links\n                                    \n                                                Link[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New Link Array (Link[])\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:98\n                \n            \n\n\n            \n                \n                    Set Content Title\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew Title (string)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Content.ts:122\n                \n            \n\n\n            \n                \n                    Set Content URL\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew URL (string)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Link } from './Link';\n\n/**\n * Angular model for Content information.\n */\nexport class Content {\n   /** Unique Identifier */\n   id: number = 0;\n   /** Title of Content */\n   title: string = '[no title]';\n   /** Content Format */\n   format: string = '[no format]';\n   /** Content Description */\n   description: string = '-';\n   /** Content URL Location */\n   url: string = '[no url]';\n   /** Content Module Links */\n   links: Link[] =[];\n\n   /**\n * Angular model for Content information.\n * @param id - Unique Identifier (number)\n * @param title - Title of content (string)\n * @param format - What the content is (string)\n * @param description - What the content contains (string)\n * @param url - Where the content is found (string)\n * @param links - Tags linking Modules with content (Link[])\n */\n   constructor(id: number, title: string, format: string, description: string, url: string, links: Link[]) {\n      if (null != id) this.id = id;\n      if (null != title) this.title = title;\n      if (null != format) this.format = format;\n      if (null != description) this.description = description;\n      if (null != url) this.url = url;\n      if (null != links) this.links = links;\n   }\n\n   /**\n    * Get unique identifier\n    * @returns id: number\n    */\n   public getId(): number {\n      return this.id;\n   }\n\n   /**\n    * Get Content Title\n    * @returns title: string\n    */\n   public getTitle(): string {\n      return this.title;\n   }\n\n   /**\n    * Get Format of Content\n    * @returns format: string\n    */\n   public getFormat(): string {\n      return this.format;\n   }\n\n   /**\n    * Get Description of Content\n    * @returns description: string\n    */\n   public getDescription(): string {\n      return this.description;\n   }\n\n   /**\n    * Get URL link of Content\n    * @returns url: string\n    */\n   public getUrl(): string {\n      return this.url;\n   }\n\n   /**\n    * Get List of Links of Content\n    * @returns links: Link[]\n    */\n   public getLinks(): Link[] {\n      return this.links;\n   }\n\n   /**\n    * Set Unique Identifier\n    * @param id - New Identifier (number)\n    */\n   public setId(id: number) {\n      this.id = id;\n   }\n\n   /**\n    * Set Content Title\n    * @param title - New Title (string)\n    */\n   public setTitle(title: string) {\n      this.title = title;\n   }\n\n   /**\n    * Set Content Format\n    * @param format - New Format (string)\n    */\n   public setFormat(format: string) {\n      this.format = format;\n   }\n\n   /**\n    * Set Content Description\n    * @param description - New Description (string)\n    */\n   public setDescription(description: string) {\n      this.description = description;\n   }\n\n   /**\n    * Set Content URL\n    * @param url - New URL (string)\n    */\n   public setUrl(url: string) {\n      this.url = url;\n   }\n\n   /**\n    * Set Content Links\n    * @param links New Link Array (Link[])\n    */\n   public setLinks(links: Link[]) {\n      this.links = links;\n   }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentCreatorPageComponent.html":{"url":"components/ContentCreatorPageComponent.html","title":"component - ContentCreatorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentCreatorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/content-creator-page/content-creator-page.component.ts\n\n\n    \n        Description\n    \n    \n        Typescript component for the Content Creator page \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-content-creator-page\n            \n\n            \n                styleUrls\n                ./content-creator-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./content-creator-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                formats\n                            \n                            \n                                    Public\n                                ms\n                            \n                            \n                                selectedSubjects\n                            \n                            \n                                selFormat\n                            \n                            \n                                title\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLinksFromSubjects\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetVariables\n                            \n                            \n                                submit\n                            \n                            \n                                validInput\n                            \n                            \n                                validURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cs: ContentFetcherService, ms: ModuleStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/content-creator-page/content-creator-page.component.ts:43\n                            \n                        \n\n                \n                    \n                            Content creater constructor \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cs\n                                                  \n                                                        \n                                                                        ContentFetcherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Content Fetcher\n\n                                                        \n                                                \n                                                \n                                                        ms\n                                                  \n                                                        \n                                                                        ModuleStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Module Store\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLinksFromSubjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetLinksFromSubjects(subjects: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:124\n                \n            \n\n\n            \n                \n                    Creates a new set of links from selected subject names\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subjects\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List/array of selected subjects subjects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Link[]\n\n                    \n                    \n                        A new set of links.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:57\n                \n            \n\n\n            \n                \n                    On page initialization load the modules to list on the dropdown menu \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetVariables\n                        \n                        \n                    \n                \n            \n            \n                \nresetVariables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:109\n                \n            \n\n\n            \n                \n                    Clears the input fields after successful content submit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:76\n                \n            \n\n\n            \n                \n                    Submit the content object which has the input fields and the list of tags as link array\nwhere the link has its subject id populated and the rest are set to default values\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validInput\n                        \n                        \n                    \n                \n            \n            \n                \nvalidInput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:64\n                \n            \n\n\n            \n                \n                    Check if the input fields are all valid - all filled in\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validURL\n                        \n                        \n                    \n                \n            \n            \n                \nvalidURL(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:142\n                \n            \n\n\n            \n                \n                    Takes in the url to check if it matches the application protocol such as http\nSee \"Url Regex Filter\" for more information on this implementation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url of content\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if url is valid, false if not valid.\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:38\n                            \n                        \n\n                \n                    \n                        Description of content\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            formats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Code\", \"Document\", \"Powerpoint\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:18\n                            \n                        \n\n                \n                    \n                        Each format string automatically generates button \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleStoreService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:52\n                            \n                        \n\n                \n                    \n                        Module Store\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedSubjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:43\n                            \n                        \n\n                \n                    \n                        Stores selected subjects\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Code\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:33\n                            \n                        \n\n                \n                    \n                        Used for radio selection for content (Ex. Powerpoint, code, etc)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:23\n                            \n                        \n\n                \n                    \n                        Title of content\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-creator-page/content-creator-page.component.ts:28\n                            \n                        \n\n                \n                    \n                        Url of content\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Content } from 'src/app/models/Content';\nimport { ContentFetcherService } from 'src/app/services/content-fetcher.service';\nimport { Link } from 'src/app/models/Link';\nimport { ModuleStoreService } from 'src/app/services/module-store.service';\n\n/** Typescript component for the Content Creator page */\n@Component({\n   selector: 'app-content-creator-page',\n   templateUrl: './content-creator-page.component.html',\n   styleUrls: ['./content-creator-page.component.css']\n})\nexport class ContentCreatorPageComponent implements OnInit {\n\n   /**\n    * Each format string automatically generates button \n    */\n   readonly formats: string[] = [\"Code\", \"Document\", \"Powerpoint\"];\n\n   /**\n    * Title of content\n    */\n   title: string;\n\n   /**\n    * Url of content\n    */\n   url: string;\n\n   /**\n    * Used for radio selection for content (Ex. Powerpoint, code, etc)\n    */\n   selFormat: string = \"Code\";\n\n   /**\n    * Description of content\n    */\n   description: string;\n\n   /**\n    * Stores selected subjects\n    */\n   selectedSubjects: string[] = [];  \n\n   /**\n    *  Content creater constructor \n    * @param cs Content Fetcher\n    * @param ms Module Store\n    */\n   constructor(\n      private cs: ContentFetcherService,\n      public ms: ModuleStoreService) {\n   }\n\n   /** On page initialization load the modules to list on the dropdown menu \n   */\n   ngOnInit() {\n      this.ms.loadModules();\n   }\n\n   /**\n    * Check if the input fields are all valid - all filled in\n    */\n   validInput(): boolean {\n      let cantBeNull = [this.title, this.selFormat, this.url, this.selectedSubjects.length];\n\n      if (cantBeNull.includes(null) || cantBeNull.includes(undefined)) return false;\n      if (this.selectedSubjects.length == 0) return false;\n      return true;\n   }\n\n   /**\n    * Submit the content object which has the input fields and the list of tags as link array\n    * where the link has its subject id populated and the rest are set to default values\n    */\n   submit() {\n\n      if (!this.validInput()) {\n         alert('Please fill in all input fields!');\n         return;\n      } else if (!this.validURL(this.url)) {\n         alert('Invalid URL. e.g. \"http://example.com\", \"ftp://www.example.com\", \"http://192.168.0.0\"');\n         return;\n      }\n\n      let content: Content = new Content(\n         null, this.title, this.selFormat,\n         this.description, this.url,\n         this.getLinksFromSubjects(this.selectedSubjects));\n\n      this.cs.createNewContent(content).subscribe(\n         (response) => {\n            if (response != null) {\n               alert('Successfully sent content.');\n               this.resetVariables();\n            } else {\n               alert('Response was null');\n            }\n         },\n         (response) => {\n            alert(\"Failed to send content\");\n         }\n      )\n   }\n\n   /**\n    * Clears the input fields after successful content submit\n    */\n   resetVariables() {\n      this.title = null;\n      this.url = null;\n      this.selFormat = \"Code\";\n      this.description = null;\n      this.selectedSubjects = [];\n   }\n\n   \n   /**\n    * Creates a new set of links from selected subject names\n    * \n    * @param {string[]} subjects List/array of selected subjects subjects\n    * @returns A new set of links.\n    */\n   getLinksFromSubjects(subjects: string[]): Link[] {\n      let links = [];\n      subjects.forEach(\n         (subject) => {\n            links.push(new Link(null, null,\n               this.ms.subjectNameToModule.get(subject).id, null));\n         }, this\n      )\n      return links;\n   }\n\n   /**\n    * Takes in the url to check if it matches the application protocol such as http\n    * See \"Url Regex Filter\" for more information on this implementation\n    * \n    * @param {string} url Url of content\n    * @returns True if url is valid, false if not valid.\n    */\n   validURL(url: string): boolean {\n      let regexp: RegExp = /^((http[s]?|ftp):\\/\\/)(((\\w+\\.)?\\w+\\.\\w{2,})|(\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3}))(\\/[\\w-._~:/?#[\\]@!$&'()*+,;=]+(\\.[\\w-._~:/?#[\\]@!$&'()*+,;=]+)?)*(\\?|\\?[\\w-._~:/?#[\\]@!$&'()*+,;=]+=[\\w-._~:/?#[\\]@!$&'()*+,;=]*(&[\\w-._~:/?#[\\]@!$&'()*+,;=]+=[\\w-._~:/?#[\\]@!$&'()*+,;=]*)*)?(#[\\w-._~:/?#[\\]@!$&'()*+,;=]*)?\\/?$/;\n\n      return regexp.test(url);\n   }\n}\n\n    \n\n    \n        \n\n   \n   \n\n      \n         \n            \n         \n\n         \n         \n\n            \n               \n\n               \n                  \n               \n\n               \n                  \n               \n               \n            \n\n            \n            \n            \n               \n               \n                  \n                  \n               \n               \n            \n\n            \n            \n               \n               \n                  \n                  \n               \n               \n            \n\n            \n            \n               \n               \n                  \n                     \n\n                        \n                        {{format}}\n                     \n                  \n               \n            \n            \n            \n               Submit Content\n            \n\n         \n\n      \n\n   \n\n\n\n    \n\n    \n                \n                    ./content-creator-page.component.css\n                \n                .card {\n   box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n   transition: 0.3s;\n   width: 80%;\n   height: 15%;\n   margin: 0 auto;\n   /* Added */\n   float: none;\n   /* Added */\n   margin-top: 20px;\n   /* Added */\n}\n\n.card:hover {\n   box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n}\n\n.container {\n   padding: 2px 16px;\n   margin-top: 70px;\n}\n\n#content {\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   position: relative;\n   top: -50px;\n   /* left: 0px; */\n   /* margin-bottom: 200px; */\n}\n\n.logo {\n   height: auto;\n   width: 10%;\n}\n\n.dropdown {\n   margin: 20px;\n}\n\n.dropdown-menu {\n   max-height: 20rem;\n   overflow-y: auto;\n}\n\n.title-url {\n   margin-left: auto;\n}\n\n.form-control {\n   background-color: rgb(245, 245, 245);\n}\n\n.btn-radio {\n   display: flex;\n   align-items: center;\n   justify-content: center;\n}\n\ninput[type=\"radio\"] {\n   margin-right: -15px;\n   /* width: 30px; */\n}\n\n.btn {\n   display: flex;\n   align-items: center;\n   justify-content: center;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var{{format}}                                                                                                         Submit Content                              '\n    var COMPONENTS = [{'name': 'ContentCreatorPageComponent', 'selector': 'app-content-creator-page'},{'name': 'ContentFinderPageComponent', 'selector': 'app-content-finder-page'},{'name': 'ModuleCreatorPageComponent', 'selector': 'app-module-creator-page'},{'name': 'ModuleIndexPageComponent', 'selector': 'app-module-index-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentCreatorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentFetcherService.html":{"url":"injectables/ContentFetcherService.html","title":"injectable - ContentFetcherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContentFetcherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/content-fetcher.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages Content between Angular and back-end\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                HEADERS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewContent\n                            \n                            \n                                deleteContentByID\n                            \n                            \n                                filterContent\n                            \n                            \n                                getAllContent\n                            \n                            \n                                getContentByID\n                            \n                            \n                                updateContentById\n                            \n                            \n                                updateContentModulesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, endpoints: EndpointsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/content-fetcher.service.ts:17\n                            \n                        \n\n                \n                    \n                            Initialize Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Client to send requests to back-end\n\n                                                        \n                                                \n                                                \n                                                        endpoints\n                                                  \n                                                        \n                                                                        EndpointsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Endpoints of back-end to send requests to\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewContent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewContent(content: Content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/content-fetcher.service.ts:33\n                \n            \n\n\n            \n                \n                    Sends HTTP request to create new Content\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                Content\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        What content to persist in back-end\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteContentByID\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteContentByID(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/content-fetcher.service.ts:72\n                \n            \n\n\n            \n                \n                    Sends HTTP request to remove Content from back-end\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unique identifier determining which Content to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterContent\n                        \n                        \n                    \n                \n            \n            \n                \nfilterContent(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/content-fetcher.service.ts:80\n                \n            \n\n\n            \n                \n                    Sends HTTP request to return filtered Content\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        What to filter returned content by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllContent\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/content-fetcher.service.ts:41\n                \n            \n\n\n            \n                \n                    Sends HTTP request to return all Content\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContentByID\n                        \n                        \n                    \n                \n            \n            \n                \ngetContentByID(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/content-fetcher.service.ts:48\n                \n            \n\n\n            \n                \n                    Sends HTTP request to return Content by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateContentById\n                        \n                        \n                    \n                \n            \n            \n                \nupdateContentById(id: number, content: Content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/content-fetcher.service.ts:57\n                \n            \n\n\n            \n                \n                    Sends HTTP request to edit Content with ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unique Identifier to choose which Content to update\n\n                                    \n                                \n                                \n                                    content\n                                    \n                                                Content\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Content containing new values to persist\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateContentModulesById\n                        \n                        \n                    \n                \n            \n            \n                \nupdateContentModulesById(id: number, modules: Module[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/content-fetcher.service.ts:63\n                \n            \n\n\n            \n                \n                    Not yet implemented, Untested \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modules\n                                    \n                                                Module[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders({ 'Content-Type': 'application/json' })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/content-fetcher.service.ts:17\n                            \n                        \n\n                \n                    \n                        HTTP Headers to be used in HTTP requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Module } from '../models/Module';\nimport { HttpClient, HttpHeaders, HttpHeaderResponse } from '@angular/common/http';\nimport { EndpointsService } from '../constants/endpoints.service';\nimport { Content } from '../models/Content';\nimport { Filter } from '../models/Filter';\n\n/**\n * Manages Content between Angular and back-end\n */\n@Injectable({\n   providedIn: 'root'\n})\nexport class ContentFetcherService {\n   /** HTTP Headers to be used in HTTP requests */\n   private readonly HEADERS = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n   /**\n    * Initialize Service\n    * @param http Client to send requests to back-end\n    * @param endpoints Endpoints of back-end to send requests to\n    */\n   constructor(\n      private http: HttpClient,\n      private endpoints: EndpointsService) {\n   }\n\n   /** \n    * Sends HTTP request to create new Content\n    * @param content What content to persist in back-end\n    */\n   createNewContent(content: Content): Observable {\n      let body: string = JSON.stringify(content);\n      return this.http.post(this.endpoints.CREATE_NEW_CONTENT, body, { headers: this.HEADERS });\n   }\n\n   /**\n    * Sends HTTP request to return all Content\n    */\n   getAllContent(): Observable {\n      return this.http.get(this.endpoints.GET_ALL_CONTENT);\n   }\n\n   /**\n    * Sends HTTP request to return Content by ID\n    */\n   getContentByID(id: number): Observable {\n      return this.http.get(this.endpoints.GET_CONTENT_BY_ID.replace('${id}', id.toString()));\n   }\n\n   /**\n    * Sends HTTP request to edit Content with ID\n    * @param id Unique Identifier to choose which Content to update\n    * @param content Content containing new values to persist\n    */\n   updateContentById(id: number, content: Content): Observable {\n      let body: string = JSON.stringify(content);\n      return this.http.put(this.endpoints.UPDATE_CONTENT_BY_ID.replace('${id}', id.toString()), body, { headers: this.HEADERS });\n   }\n\n   /** Not yet implemented, Untested */\n   updateContentModulesById(id: number, modules: Module[]): Observable {\n      let body: string = JSON.stringify(modules);\n      return this.http.put(this.endpoints.UPDATE_CONTENT_MODULES_BY_ID.replace('${id}', id.toString()), body, { headers: this.HEADERS });\n   }\n\n   /**\n    * Sends HTTP request to remove Content from back-end\n    * @param id Unique identifier determining which Content to remove\n    */\n   deleteContentByID(id: number): Observable {\n      return this.http.delete(this.endpoints.DELETE_CONTENT_BY_ID.replace('${id}', id.toString()));\n   }\n\n   /**\n    * Sends HTTP request to return filtered Content\n    * @param filter What to filter returned content by\n    */\n   filterContent(filter: Filter): Observable {\n      let body: string = JSON.stringify(filter);\n      return this.http.post(this.endpoints.FILTER_CONTENT, body, { headers: this.HEADERS });\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentFinderPageComponent.html":{"url":"components/ContentFinderPageComponent.html","title":"component - ContentFinderPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentFinderPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/content-finder-page/content-finder-page.component.ts\n\n\n    \n        Description\n    \n    \n        Typescript component for Content Finder page \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-content-finder-page\n            \n\n            \n                styleUrls\n                ./content-finder-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./content-finder-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contents\n                            \n                            \n                                    Readonly\n                                formats\n                            \n                            \n                                moduleIDs\n                            \n                            \n                                    Public\n                                ms\n                            \n                            \n                                searchedSubjects\n                            \n                            \n                                selectedSubjects\n                            \n                            \n                                selFormat\n                            \n                            \n                                tablebool\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIDsFromSubjects\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                notEmpty\n                            \n                            \n                                parseContentResponse\n                            \n                            \n                                reset\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cs: ContentFetcherService, ms: ModuleStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/content-finder-page/content-finder-page.component.ts:53\n                            \n                        \n\n                \n                    \n                            Content Finder Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cs\n                                                  \n                                                        \n                                                                        ContentFetcherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Allows us to fetch content\n\n                                                        \n                                                \n                                                \n                                                        ms\n                                                  \n                                                        \n                                                                        ModuleStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Allows us to get information for tags\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIDsFromSubjects\n                        \n                        \n                    \n                \n            \n            \n                \ngetIDsFromSubjects(subjects: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:155\n                \n            \n\n\n            \n                \n                    Gets the string array of selected subjects and populates the number array of subject id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subjects\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:67\n                \n            \n\n\n            \n                \n                    On page initialization load the modules to list on the dropdown menu \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            notEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nnotEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:141\n                \n            \n\n\n            \n                \n                    Function to see if the table is populated with content\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if table has content and false if no content is preset\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseContentResponse\n                        \n                        \n                    \n                \n            \n            \n                \nparseContentResponse(response: Content[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:107\n                \n            \n\n\n            \n                \n                    Sorts the content's order and then the content's link's order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                Content[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:130\n                \n            \n\n\n            \n                \n                    Resets the input fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:76\n                \n            \n\n\n            \n                \n                    Submit function that takes in all input and puts it into a filter object\nto subscribe method. If the request was successful then it will get the\nresponse as the array of content and populate the table and print it.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Content[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:33\n                            \n                        \n\n                \n                    \n                        Array of contents\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            formats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Code\", \"Document\", \"Powerpoint\", \"All\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:18\n                            \n                        \n\n                \n                    \n                        Selection of formats to choose betwwen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleIDs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:43\n                            \n                        \n\n                \n                    \n                        Stores the tags\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleStoreService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:62\n                            \n                        \n\n                \n                    \n                        Allows us to get information for tags\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchedSubjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:53\n                            \n                        \n\n                \n                    \n                        Takes selected subjects and used for searching\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedSubjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:48\n                            \n                        \n\n                \n                    \n                        Selected from subject list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"All\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:28\n                            \n                        \n\n                \n                    \n                        Sets defualt for content selection to All\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tablebool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:38\n                            \n                        \n\n                \n                    \n                        Hides table for contents until Find content is clicked and content is available\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/content-finder-page/content-finder-page.component.ts:23\n                            \n                        \n\n                \n                    \n                        Title of content\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Content } from '../../models/Content';\nimport { Filter } from '../../models/Filter';\nimport { ContentFetcherService } from 'src/app/services/content-fetcher.service';\nimport { ModuleStoreService } from 'src/app/services/module-store.service';\n\n/** Typescript component for Content Finder page */\n@Component({\n   selector: 'app-content-finder-page',\n   templateUrl: './content-finder-page.component.html',\n   styleUrls: ['./content-finder-page.component.css']\n})\nexport class ContentFinderPageComponent implements OnInit {\n\n   /**\n    * Selection of formats to choose betwwen\n    */\n   readonly formats: string[] = [\"Code\", \"Document\", \"Powerpoint\", \"All\"];\n\n   /**\n    * Title of content\n    */\n   title: string = \"\";\n\n   /**\n    * Sets defualt for content selection to All\n    */\n   selFormat: string = \"All\";\n\n   /**\n    * Array of contents\n    */\n   contents: Content[];\n\n   /**\n    * Hides table for contents until Find content is clicked and content is available\n    */\n   tablebool: boolean = false;\n\n   /**\n    * Stores the tags\n    */\n   moduleIDs: number[];\n\n   /**\n    * Selected from subject list\n    */\n   selectedSubjects: string[] = [];\n\n   /**\n    * Takes selected subjects and used for searching\n    */\n   searchedSubjects: string[] = [];\n\n   /**\n    * Content Finder Constructor\n    * @param cs Allows us to fetch content\n    * @param ms Allows us to get information for tags\n    */\n   constructor(\n      private cs: ContentFetcherService,\n      public ms: ModuleStoreService) { }\n\n   /**\n    * On page initialization load the modules to list on the dropdown menu \n    */\n   ngOnInit() {\n      this.ms.loadModules();\n   }\n\n   /**\n    * Submit function that takes in all input and puts it into a filter object\n    * to subscribe method. If the request was successful then it will get the\n    * response as the array of content and populate the table and print it.\n    */\n   submit() {\n      let format: string = this.selFormat;\n      if (format === \"All\") {\n         format = \"\";\n      }\n      this.getIDsFromSubjects(this.selectedSubjects);\n      let filter: Filter = new Filter(\n         this.title, format, this.moduleIDs\n      );\n      this.searchedSubjects = this.selectedSubjects;\n      this.cs.filterContent(filter).subscribe(\n         (response) => {\n            if (response != null) {\n               this.parseContentResponse(response);\n               if (this.notEmpty()) { }\n               else\n                  alert(\"No Results Found\");\n            } else {\n               alert('Response was null');\n            }\n         },\n         (response) => {\n            alert(\"Failed to send filter\")\n         }\n      )\n   }\n\n   /**\n    * Sorts the content's order and then the content's link's order\n    * @param response\n    */\n   parseContentResponse(response: Content[]) {\n      /* Sorts contents by their id */\n      this.contents = response.sort(\n         (a, b) => { return a.id - b.id });\n\n      /* Sorts each content's list of links by\n       * subject/module name via lookup Map */\n      this.contents.forEach(\n         (content) => {\n            content.links = content.links.sort(\n               (a, b) => {\n                  let sortedIndexA: number = this.ms.subjectIdToSortedIndex.get(a.moduleId);\n                  let sortedIndexB: number = this.ms.subjectIdToSortedIndex.get(b.moduleId);\n                  return sortedIndexA - sortedIndexB;\n               }\n            );\n         }, this\n      )\n   }\n\n   /**\n    * Resets the input fields\n    */\n   reset() {\n      this.title = \"\";\n      this.selFormat = \"Code\";\n      this.selectedSubjects = [];\n   }\n\n   /**\n    * Function to see if the table is populated with content\n    * \n    * @returns True if table has content and false if no content is preset\n    */\n   notEmpty(): boolean {\n      if (this.contents.length != 0) {\n         this.tablebool = true;\n         return true;\n      } else {\n         this.tablebool = false;\n         return false;\n      }\n   }\n\n   /**\n    * Gets the string array of selected subjects and populates the number array of subject id\n    * @param {string} subjects\n    */\n   getIDsFromSubjects(subjects: string[]) {\n      this.moduleIDs = [];\n      subjects.forEach(\n         (subject) => {\n            this.moduleIDs.push(this.ms.subjectNameToModule.get(subject).id);\n         }, this\n      )\n   }\n\n}\n\n    \n\n    \n        \n   \n      \n         \n            \n         \n      \n      \n      \n         \n            \n            \n\n            \n            \n               \n            \n\n            \n            \n               \n                  \n                     \n                     {{format}}\n                  \n               \n            \n\n            \n            \n\n            \n         \n\n         \n         \n            \n            \n               \n               \n            \n            \n         \n         \n         \n            Find Content\n         \n      \n   \n\n\n\n   \n\n      \n      \n\n         \n            \n               \n                  \n                     \n                        Content ID\n                        Title\n                        Format\n                        Description\n                        URL\n                        Subjects\n                     \n                  \n\n                  \n                     \n                        {{content.id}} \n                        {{content.title}}\n                        {{content.format}}\n                        {{content.description}}\n                        {{content.url}}\n                        \n                        \n                           \n                              {{ms.subjectIdToName.get(link.moduleId)}}\n                              \n                           \n                        \n                     \n                  \n               \n            \n         \n      \n   \n\n    \n\n    \n                \n                    ./content-finder-page.component.css\n                \n                .card {\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    transition: 0.3s;\n    width: 80%;\n    height: 15%;\n    margin: 0 auto; /* Added */\n    float: none; /* Added */\n    margin-top: 20px; /* Added */\n \n  }\n  \n  .card:hover {\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  }\n  \n  .container { \n    padding: 2px 16px;\n    margin-top: 70px;\n  }\n\n#content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  top: -50px;\n    /* left: 0px; */\n    /* margin-bottom: 200px; */\n  }\n\n  .logo {\n    height: auto;\n    width: 10%;\n  }\n\n  .btn-radio {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  input[type=\"radio\"] {\n    margin-right: -15px;\n    /* width: 30px; */\n  }\n\n  .btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  td.tag-bubble-cell {\n    line-height: 2;\n  }\n\n  .tag-bubble {\n    padding: 2px;\n    margin: 1px;\n    background-color: #d5d5d5;\n    border-radius: 3px;\n    border: 1px solid black;\n  }\n\n  /* .table-responsive{-sm|-md|-lg|-xl} */\n\n  .fa-flag {\n    color: rgb(190,0,0);\n  }\n  \n  .fa-flag:hover {\n    color: orange;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                {{format}}                                                                                                                                                                                                                                 Find Content                                                                                                                                    Content ID                        Title                        Format                        Description                        URL                        Subjects                                                                                                      {{content.id}}                         {{content.title}}                        {{content.format}}                        {{content.description}}                        {{content.url}}                                                                                                         {{ms.subjectIdToName.get(link.moduleId)}}                                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'ContentCreatorPageComponent', 'selector': 'app-content-creator-page'},{'name': 'ContentFinderPageComponent', 'selector': 'app-content-finder-page'},{'name': 'ModuleCreatorPageComponent', 'selector': 'app-module-creator-page'},{'name': 'ModuleIndexPageComponent', 'selector': 'app-module-index-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentFinderPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentWrapper.html":{"url":"classes/ContentWrapper.html","title":"class - ContentWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ContentWrapper.ts\n        \n\n            \n                Description\n            \n            \n                Depreciated\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(content: Content, subject: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/ContentWrapper.ts:10\n                            \n                        \n\n                \n                    \n                            Depreciated\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                        Content\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nContent being wrapped\n\n\n                                                        \n                                                \n                                                \n                                                        subject\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nReplaced by Links[] in Content\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Content\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/ContentWrapper.ts:8\n                            \n                        \n\n                \n                    \n                        Content linked to Modules \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/ContentWrapper.ts:10\n                            \n                        \n\n                \n                    \n                        Modules Content is linked to \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Content } from './Content';\n\n/**\n * Depreciated\n */\nexport class ContentWrapper{\n    /** Content linked to Modules */\n    content: Content;\n    /** Modules Content is linked to */\n    subject: string[];\n\n    /** \n     * Depreciated\n     * @param content - Content being wrapped\n     * @param subject - Replaced by Links[] in Content\n     */\n    constructor(content: Content, subject: string[]){\n        this.content = content;\n        this.subject = subject;\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointsService.html":{"url":"injectables/EndpointsService.html","title":"injectable - EndpointsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EndpointsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/constants/endpoints.service.ts\n        \n\n            \n                Description\n            \n            \n                Accessible back-end endpoints \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                baseURL\n                            \n                            \n                                    Public\n                                    Readonly\n                                CREATE_NEW_CONTENT\n                            \n                            \n                                    Public\n                                    Readonly\n                                CREATE_NEW_MODULE\n                            \n                            \n                                    Public\n                                    Readonly\n                                DELETE_CONTENT_BY_ID\n                            \n                            \n                                    Public\n                                    Readonly\n                                FILTER_CONTENT\n                            \n                            \n                                    Public\n                                    Readonly\n                                GET_ALL_CONTENT\n                            \n                            \n                                    Public\n                                    Readonly\n                                GET_ALL_MODULES\n                            \n                            \n                                    Public\n                                    Readonly\n                                GET_CONTENT_BY_ID\n                            \n                            \n                                    Public\n                                    Readonly\n                                GET_MODULE_BY_ID\n                            \n                            \n                                    Public\n                                    Readonly\n                                UPDATE_CONTENT_BY_ID\n                            \n                            \n                                    Public\n                                    Readonly\n                                UPDATE_CONTENT_MODULES_BY_ID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllEndpoints\n                            \n                            \n                                    Public\n                                printJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/constants/endpoints.service.ts:32\n                            \n                        \n\n                \n                    \n                            Initialization of Endpoints \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllEndpoints\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllEndpoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/constants/endpoints.service.ts:38\n                \n            \n\n\n            \n                \n                    Returns string array containing all endpoints \n\n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            printJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    printJSON(uri: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/constants/endpoints.service.ts:55\n                \n            \n\n\n            \n                \n                    Test method for printing out JSON at any given URL \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            baseURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.cms_url\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:11\n                            \n                        \n\n                \n                    \n                        Base URL to add endpoints to, obtained from ENV \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            CREATE_NEW_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/content'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:14\n                            \n                        \n\n                \n                    \n                        Create Content Endpoint \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            CREATE_NEW_MODULE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/module'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:26\n                            \n                        \n\n                \n                    \n                        Create Module Endpoint \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            DELETE_CONTENT_BY_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/content/${id}'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:24\n                            \n                        \n\n                \n                    \n                        Delete Content Endpoint \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            FILTER_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/search'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:32\n                            \n                        \n\n                \n                    \n                        Filter Content Endpoint \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            GET_ALL_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/content'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:16\n                            \n                        \n\n                \n                    \n                        Get All Content Endpoint \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            GET_ALL_MODULES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/module'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:28\n                            \n                        \n\n                \n                    \n                        Get All Modules Endpoint \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            GET_CONTENT_BY_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/content/${id}'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:18\n                            \n                        \n\n                \n                    \n                        Get Content by ID Endpoint \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            GET_MODULE_BY_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/module/${id}'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:30\n                            \n                        \n\n                \n                    \n                        Get Module by ID Endpoint \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            UPDATE_CONTENT_BY_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/content/${id}'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:20\n                            \n                        \n\n                \n                    \n                        Update Content Endpoint \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            UPDATE_CONTENT_MODULES_BY_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.baseURL + '/content/${id}/modules'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/constants/endpoints.service.ts:22\n                            \n                        \n\n                \n                    \n                        Unused \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment'\n\n/** Accessible back-end endpoints */\n@Injectable({\n   providedIn: 'root'\n})\nexport class EndpointsService {\n   /** Base URL to add endpoints to, obtained from ENV */\n   public readonly baseURL = environment.cms_url;   // CHANGE TO HOST\n\n   /** Create Content Endpoint */\n   public readonly CREATE_NEW_CONTENT: string = this.baseURL + '/content';\n   /** Get All Content Endpoint */\n   public readonly GET_ALL_CONTENT: string = this.baseURL + '/content';\n   /** Get Content by ID Endpoint */\n   public readonly GET_CONTENT_BY_ID: string = this.baseURL + '/content/${id}';\n   /** Update Content Endpoint */\n   public readonly UPDATE_CONTENT_BY_ID: string = this.baseURL + '/content/${id}';\n   /** Unused */\n   public readonly UPDATE_CONTENT_MODULES_BY_ID: string = this.baseURL + '/content/${id}/modules';\n   /** Delete Content Endpoint */\n   public readonly DELETE_CONTENT_BY_ID: string = this.baseURL + '/content/${id}';\n   /** Create Module Endpoint */\n   public readonly CREATE_NEW_MODULE: string = this.baseURL + '/module';\n   /** Get All Modules Endpoint */\n   public readonly GET_ALL_MODULES: string = this.baseURL + '/module';\n   /** Get Module by ID Endpoint */\n   public readonly GET_MODULE_BY_ID: string = this.baseURL + '/module/${id}';\n   /** Filter Content Endpoint */\n   public readonly FILTER_CONTENT: string = this.baseURL + '/search';\n\n   /** Initialization of Endpoints */\n   constructor(private http: HttpClient) { }\n\n   /** Returns string array containing all endpoints */\n   public getAllEndpoints(): string[] {\n      let endpoints: string[] = new Array(\n         this.CREATE_NEW_CONTENT,\n         this.GET_ALL_CONTENT,\n         this.GET_CONTENT_BY_ID,\n         this.UPDATE_CONTENT_BY_ID,\n         this.UPDATE_CONTENT_MODULES_BY_ID,\n         this.DELETE_CONTENT_BY_ID,\n         this.CREATE_NEW_MODULE,\n         this.GET_ALL_MODULES,\n         this.GET_MODULE_BY_ID,\n         this.FILTER_CONTENT);\n\n      return endpoints;\n   }\n\n   /** Test method for printing out JSON at any given URL */\n   public printJSON(uri: string): any {\n      let obs = this.http.get(uri);\n      obs.subscribe(\n         (response) => {\n            console.log(response);\n         },\n         (response) => {\n            console.log('failed');\n         }\n      )\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Filter.ts\n        \n\n            \n                Description\n            \n            \n                Object used to filter out data \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                modules\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormat\n                            \n                            \n                                    Public\n                                getModules\n                            \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                setFormat\n                            \n                            \n                                    Public\n                                setModules\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, format: string, modules: number[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Filter.ts:11\n                            \n                        \n\n                \n                    \n                            Create a new Filter with specified options\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                What to check against Content's Title being filtered\n\n                                                        \n                                                \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                What to check against Content's Format being filtered\n\n                                                        \n                                                \n                                                \n                                                        modules\n                                                  \n                                                        \n                                                                    number[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Which modules filtered Contents can link to\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Filter.ts:9\n                            \n                        \n\n                \n                    \n                        What to match Format with \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Filter.ts:11\n                            \n                        \n\n                \n                    \n                        Which modules should not be filtered out \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Filter.ts:7\n                            \n                        \n\n                \n                    \n                        What to match Title with \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Filter.ts:34\n                \n            \n\n\n            \n                \n                    Get what format is allowed from filter\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getModules\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getModules()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Filter.ts:40\n                \n            \n\n\n            \n                \n                    Get which modules are allowed from filter\n\n\n                    \n                        Returns :     number[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Filter.ts:28\n                \n            \n\n\n            \n                \n                    Get what title is allowed from filter\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFormat(format: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Filter.ts:54\n                \n            \n\n\n            \n                \n                    Set what format is allowed from filter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Allowed filter in Content\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setModules\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setModules(modules: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Filter.ts:61\n                \n            \n\n\n            \n                \n                    Set which modules are allowed from filter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Allowed link ids in Content\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Filter.ts:47\n                \n            \n\n\n            \n                \n                    Set what title is allowed from filter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Allowed title in Content\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Filter {\n    /** What to match Title with */\n    title: string = \"\";\n    /** What to match Format with */\n    format: string = \"\";\n    /** Which modules should not be filtered out */\n    modules: number[] = [];\n\n    /**\n     * Create a new Filter with specified options\n     * @param title What to check against Content's Title being filtered\n     * @param format What to check against Content's Format being filtered\n     * @param modules Which modules filtered Contents can link to\n     */\n    constructor(title: string, format: string, modules: number[]){\n        if (null != title) this.title = title;\n        if (null != format) this.format = format;\n        if (null != modules) this.modules = modules;\n    }\n\n    /**\n     * Get what title is allowed from filter\n     */\n    public getTitle(): string {\n        return this.title;\n    }\n    /**\n     * Get what format is allowed from filter\n     */\n    public getFormat(): string {\n        return this.format;\n    }\n    /**\n     * Get which modules are allowed from filter\n     */\n    public getModules(): number[] {\n        return this.modules;\n    }\n    /**\n     * Set what title is allowed from filter\n     * @param title Allowed title in Content\n     */\n    public setTitle(title: string){\n        this.title = title;\n    }\n    /**\n     * Set what format is allowed from filter\n     * @param format Allowed filter in Content\n     */\n    public setFormat(format: string){\n        this.format = format;\n    }\n    /**\n     * Set which modules are allowed from filter\n     * @param modules Allowed link ids in Content\n     */\n    public setModules(modules: number[]){\n        this.modules = modules;\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Link.ts\n        \n\n            \n                Description\n            \n            \n                Links between Content and Modules \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                affiliation\n                            \n                            \n                                contentId\n                            \n                            \n                                id\n                            \n                            \n                                moduleId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAffiliation\n                            \n                            \n                                    Public\n                                getFkContent\n                            \n                            \n                                    Public\n                                getFkModule\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                setAffiliation\n                            \n                            \n                                    Public\n                                setFkContent\n                            \n                            \n                                    Public\n                                setFkModule\n                            \n                            \n                                    Public\n                                setId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, fkContent: number, fkModule: number, affiliation: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Link.ts:10\n                            \n                        \n\n                \n                    \n                            Create a new Link between Content and Module\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unique identifier of link\n\n                                                        \n                                                \n                                                \n                                                        fkContent\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Content to be linked\n\n                                                        \n                                                \n                                                \n                                                        fkModule\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Module to be linked\n\n                                                        \n                                                \n                                                \n                                                        affiliation\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unused - Default \"relaventTo\"\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            affiliation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"relaventTo\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Link.ts:10\n                            \n                        \n\n                \n                    \n                        Unused \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Link.ts:6\n                            \n                        \n\n                \n                    \n                        Content linked to Module \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Link.ts:4\n                            \n                        \n\n                \n                    \n                        Unique identifier of Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Link.ts:8\n                            \n                        \n\n                \n                    \n                        Module linked to Content \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAffiliation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAffiliation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Link.ts:66\n                \n            \n\n\n            \n                \n                    Unused - Will return \"relaventTo\" \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFkContent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFkContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Link.ts:42\n                \n            \n\n\n            \n                \n                    Get linked Content id\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFkModule\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFkModule()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Link.ts:55\n                \n            \n\n\n            \n                \n                    Get linked Module id\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Link.ts:29\n                \n            \n\n\n            \n                \n                    Get link's unique identifier\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAffiliation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAffiliation(affiliation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Link.ts:73\n                \n            \n\n\n            \n                \n                    Unused - Can change affiliation string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    affiliation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        What to set affiliation string to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFkContent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFkContent(fkContent: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Link.ts:49\n                \n            \n\n\n            \n                \n                    Set linked Content id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fkContent\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unique ID of content\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFkModule\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFkModule(fkModule: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Link.ts:62\n                \n            \n\n\n            \n                \n                    Set linked Module id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fkModule\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unique ID of module\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Link.ts:36\n                \n            \n\n\n            \n                \n                    Set link's unique identifier\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New Unique Identifier\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Link {\n   /** Unique identifier of Link */\n   id: number = 0;\n   /** Content linked to Module */\n   contentId: number = 0;\n   /** Module linked to Content */\n   moduleId: number = -1;\n   /** Unused */\n   affiliation: string = \"relaventTo\";\n\n   /**\n    * Create a new Link between Content and Module\n    * @param id Unique identifier of link\n    * @param fkContent Content to be linked\n    * @param fkModule Module to be linked\n    * @param affiliation Unused - Default \"relaventTo\"\n    */\n   constructor(id: number, fkContent: number, fkModule: number, affiliation: string) {\n      if (null != id) this.id = id;\n      if (null != fkContent) this.contentId = fkContent;\n      if (null != fkModule) this.moduleId = fkModule;\n      if (null != affiliation) this.affiliation = affiliation;\n   }\n\n   /**\n    * Get link's unique identifier\n    */\n   public getId(): number {\n      return this.id;\n   }\n   /**\n    * Set link's unique identifier\n    * @param id New Unique Identifier\n    */\n   public setId(id: number) {\n      this.id = id;\n   }\n   /**\n    * Get linked Content id\n    */\n   public getFkContent(): number {\n      return this.contentId;\n   }\n   /**\n    * Set linked Content id\n    * @param fkContent Unique ID of content\n    */\n   public setFkContent(fkContent: number) {\n      this.contentId = fkContent;\n   }\n   /**\n    * Get linked Module id\n    */\n   public getFkModule(): number {\n      return this.moduleId;\n   }\n   /**\n    * Set linked Module id\n    * @param fkModule Unique ID of module\n    */\n   public setFkModule(fkModule: number) {\n      this.moduleId = fkModule;\n   }\n   /** Unused - Will return \"relaventTo\" */\n   public getAffiliation(): string {\n      return this.affiliation;\n   }\n   /** \n    * Unused - Can change affiliation string\n    * @param affiliation What to set affiliation string to\n    */\n   public setAffiliation(affiliation: string) {\n      this.affiliation = affiliation;\n   }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Module.html":{"url":"classes/Module.html","title":"class - Module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Module.ts\n        \n\n            \n                Description\n            \n            \n                Common Tags to describe and sort Content \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                created\n                            \n                            \n                                id\n                            \n                            \n                                links\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColor\n                            \n                            \n                                    Public\n                                getCreated\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getLinks\n                            \n                            \n                                    Public\n                                getSubject\n                            \n                            \n                                    Public\n                                setColor\n                            \n                            \n                                    Public\n                                setCreated\n                            \n                            \n                                    Public\n                                setId\n                            \n                            \n                                    Public\n                                setLinks\n                            \n                            \n                                    Public\n                                setSubject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, subject: string, created: number, links: Link[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Module.ts:14\n                            \n                        \n\n                \n                    \n                            Create a new Module to describe and sort Content\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unique Identifier\n\n                                                        \n                                                \n                                                \n                                                        subject\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Display string \n\n                                                        \n                                                \n                                                \n                                                        created\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Date created\n\n                                                        \n                                                \n                                                \n                                                        links\n                                                  \n                                                        \n                                                                        Link[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Links to Content\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Module.ts:14\n                            \n                        \n\n                \n                    \n                        Display background color in HEX \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Module.ts:10\n                            \n                        \n\n                \n                    \n                        Date Module was created \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Module.ts:6\n                            \n                        \n\n                \n                    \n                        Unique Identifier \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            links\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Link[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Module.ts:12\n                            \n                        \n\n                \n                    \n                        Links to Content \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[undefined subject]'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Module.ts:8\n                            \n                        \n\n                \n                    \n                        Display string to describe Content \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:61\n                \n            \n\n\n            \n                \n                    Get display color of Module\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCreated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCreated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:47\n                \n            \n\n\n            \n                \n                    Get date Module was created\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:33\n                \n            \n\n\n            \n                \n                    Get unique identifier\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLinks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLinks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:54\n                \n            \n\n\n            \n                \n                    Get array of links connected to Module\n\n\n                    \n                        Returns :         Link[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:40\n                \n            \n\n\n            \n                \n                    Get string description of Module\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setColor(color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:101\n                \n            \n\n\n            \n                \n                    Set background color of Module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New BG color\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCreated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCreated(created: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:85\n                \n            \n\n\n            \n                \n                    Set created date\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    created\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module creation date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:69\n                \n            \n\n\n            \n                \n                    Set unique identifier\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New unique identifier\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLinks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLinks(links: Link[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:93\n                \n            \n\n\n            \n                \n                    Set links connected to Module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    links\n                                    \n                                                Link[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New array of links\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSubject(subject: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/Module.ts:77\n                \n            \n\n\n            \n                \n                    Set new tag name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New tag name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Link } from './Link';\n\n/** Common Tags to describe and sort Content */\nexport class Module {\n   /** Unique Identifier */\n   id: number = -1;\n   /** Display string to describe Content */\n   subject: string = '[undefined subject]';\n   /** Date Module was created */\n   created: number = 0;\n   /** Links to Content */\n   links: Link[] = [];\n   /** Display background color in HEX */\n   color: string;\n\n   /**\n    * Create a new Module to describe and sort Content\n    * @param id Unique Identifier\n    * @param subject Display string \n    * @param created Date created\n    * @param links Links to Content\n    */\n   constructor(id: number, subject: string, created: number, links: Link[]) {\n      if (id != null) this.id = id;\n      if (subject != null) this.subject = subject;\n      if (created != null) this.created = created;\n      if (links != null) this.links = links;\n   }\n\n   /**\n    * Get unique identifier\n    */\n   public getId(): number {\n      return this.id;\n   }\n\n   /**\n    * Get string description of Module\n    */\n   public getSubject(): string {\n      return this.subject;\n   }\n\n   /**\n    * Get date Module was created\n    */\n   public getCreated(): number {\n      return this.created;\n   }\n\n   /**\n    * Get array of links connected to Module\n    */\n   public getLinks(): Link[] {\n      return this.links;\n   }\n   \n   /**\n    * Get display color of Module\n    */\n   public getColor(): string {\n     return this.color;\n   }\n\n   /**\n    * Set unique identifier\n    * @param id New unique identifier\n    */\n   public setId(id: number) {\n      this.id = id;\n   }\n\n   /**\n    * Set new tag name\n    * @param subject New tag name\n    */\n   public setSubject(subject: string) {\n      this.subject = subject;\n   }\n\n   /**\n    * Set created date\n    * @param created Module creation date\n    */\n   public setCreated(created: number) {\n      this.created = created;\n   }\n\n   /**\n    * Set links connected to Module\n    * @param links New array of links\n    */\n   public setLinks(links: Link[]) {\n      this.links = links;\n   }\n   \n   /**\n    * Set background color of Module\n    * @param color New BG color\n    */\n   public setColor(color: string) {\n     this.color = color;\n   }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModuleCreatorPageComponent.html":{"url":"components/ModuleCreatorPageComponent.html","title":"component - ModuleCreatorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModuleCreatorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/module-creator-page/module-creator-page.component.ts\n\n\n    \n        Description\n    \n    \n        Typescript Component for Module Creator Page \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-module-creator-page\n            \n\n            \n                styleUrls\n                ./module-creator-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./module-creator-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                resetVariables\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mf: ModuleFetcherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/module-creator-page/module-creator-page.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor for Module Crator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mf\n                                                  \n                                                        \n                                                                        ModuleFetcherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Grabs links/tag\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetVariables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetVariables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/module-creator-page/module-creator-page.component.ts:69\n                \n            \n\n\n            \n                \n                    Resets subject field\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/module-creator-page/module-creator-page.component.ts:34\n                \n            \n\n\n            \n                \n                    Makes the observable call by creating a module object with the inputted subject field\nwith HTTP GET from the services\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/module-creator-page/module-creator-page.component.ts:16\n                            \n                        \n\n                \n                    \n                        Tag name/subject\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Module } from 'src/app/models/Module';\nimport { ModuleFetcherService } from 'src/app/services/module-fetcher.service';\n\n/** Typescript Component for Module Creator Page */\n@Component({\n   selector: 'app-module-creator-page',\n   templateUrl: './module-creator-page.component.html',\n   styleUrls: ['./module-creator-page.component.css']\n})\nexport class ModuleCreatorPageComponent implements OnInit {\n\n   /**\n    * Tag name/subject\n    */\n   subject: string = \"\";\n\n   /**\n    * Constructor for Module Crator\n    * @param mf Grabs links/tag\n    */\n   constructor(\n      private mf: ModuleFetcherService\n   ) { }\n\n   /**@ignore */\n   ngOnInit() {\n   }\n\n   /**\n    * Makes the observable call by creating a module object with the inputted subject field\n    * with HTTP GET from the services\n    */\n   submit() {\n\n      /* If input field is null alert the user */\n      if (['', null, undefined].includes(this.subject)) {\n         alert('Please fill in the input field!');\n         this.resetVariables();\n         return;\n      }\n\n      let module: Module = new Module(\n         null, this.subject, null, null\n      )\n\n      this.mf.createNewModule(module).subscribe(\n         /* On Success */\n         (response) => {\n            if (response != null)\n               alert('Successfully sent module.');\n            else\n               alert('There was a problem creating a subject');\n         },\n\n         /* On Failure */\n         (response) => {\n            alert(\"Failed to create subject. Subject may already exist.\");\n         },\n\n         /* After success */\n         () => this.resetVariables()\n      )\n   }\n\n   /**\n    * Resets subject field\n    */\n   private resetVariables() {\n      this.subject = \"\";\n   }\n}\n\n    \n\n    \n        \n\n  \n  \n\n     \n        \n           \n        \n\n        \n        \n\n           \n              \n\n              \n                 \n              \n              \n           \n           \n           \n              Submit Module\n           \n\n        \n\n     \n\n  \n\n\n    \n\n    \n                \n                    ./module-creator-page.component.css\n                \n                .card {\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    transition: 0.3s;\n    width: 80%;\n    height: 15%;\n    margin: 0 auto;\n    /* Added */\n    float: none;\n    /* Added */\n    margin-top: 20px;\n    /* Added */\n }\n \n .card:hover {\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n }\n \n .container {\n    padding: 2px 16px;\n    margin-top: 70px;\n }\n \n #content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    top: -50px;\n    /* left: 0px; */\n    /* margin-bottom: 200px; */\n }\n \n .logo {\n    height: auto;\n    width: 10%;\n }\n \n .dropdown {\n    margin: 20px;\n }\n \n .dropdown-menu {\n    max-height: 20rem;\n    overflow-y: auto;\n }\n \n .title-url {\n    margin-left: auto;\n }\n \n .form-control {\n    background-color: rgb(245, 245, 245);\n }\n \n .btn-radio {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n }\n \n input[type=\"radio\"] {\n    margin-right: -15px;\n    /* width: 30px; */\n }\n \n .btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n }\n \n \n \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                       Submit Module                          '\n    var COMPONENTS = [{'name': 'ContentCreatorPageComponent', 'selector': 'app-content-creator-page'},{'name': 'ContentFinderPageComponent', 'selector': 'app-content-finder-page'},{'name': 'ModuleCreatorPageComponent', 'selector': 'app-module-creator-page'},{'name': 'ModuleIndexPageComponent', 'selector': 'app-module-index-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModuleCreatorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleFetcherService.html":{"url":"injectables/ModuleFetcherService.html","title":"injectable - ModuleFetcherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModuleFetcherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/module-fetcher.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages Modules between Angular and back-end \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                HEADERS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewModule\n                            \n                            \n                                getAllFakeModules\n                            \n                            \n                                getAllModules\n                            \n                            \n                                getModuleByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, endpoints: EndpointsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/module-fetcher.service.ts:13\n                            \n                        \n\n                \n                    \n                            Initialize Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Client to send requests to back-end\n\n                                                        \n                                                \n                                                \n                                                        endpoints\n                                                  \n                                                        \n                                                                        EndpointsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Endpoints of back-end to send requests to\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewModule\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewModule(module: Module)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/module-fetcher.service.ts:49\n                \n            \n\n\n            \n                \n                    Sends HTTP request to persist Module to back-end\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                Module\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        What module to persist to back-end\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllFakeModules\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllFakeModules(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/module-fetcher.service.ts:41\n                \n            \n\n\n            \n                \n                    used for debugging, loads Module[] from specified URL \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllModules\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllModules()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/module-fetcher.service.ts:28\n                \n            \n\n\n            \n                \n                    Sends HTTP request to return all Modules\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getModuleByID\n                        \n                        \n                    \n                \n            \n            \n                \ngetModuleByID(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/module-fetcher.service.ts:36\n                \n            \n\n\n            \n                \n                    Sends HTTP request to return Module by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unique Identifier of Module to be returned\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders({ 'Content-Type': 'application/json' })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/module-fetcher.service.ts:13\n                            \n                        \n\n                \n                    \n                        HTTP Headers to be used in HTTP requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Module } from '../models/Module';\nimport { HttpClient, HttpHeaderResponse, HttpHeaders } from '@angular/common/http';\nimport { EndpointsService } from '../constants/endpoints.service';\n\n/** Manages Modules between Angular and back-end */\n@Injectable({\n   providedIn: 'root'\n})\nexport class ModuleFetcherService {\n   /** HTTP Headers to be used in HTTP requests */\n   private readonly HEADERS = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n   /**\n    * Initialize Service\n    * @param http Client to send requests to back-end\n    * @param endpoints Endpoints of back-end to send requests to\n    */\n   constructor(\n      private http: HttpClient,\n      private endpoints: EndpointsService) {\n   }\n\n   /**\n    * Sends HTTP request to return all Modules\n    */\n   getAllModules(): Observable {\n      return this.http.get(this.endpoints.GET_ALL_MODULES);\n   }\n\n   /**\n    * Sends HTTP request to return Module by ID\n    * @param id Unique Identifier of Module to be returned\n    */\n   getModuleByID(id: number): Observable {\n      return this.http.get(this.endpoints.GET_MODULE_BY_ID.replace('${id}', id.toString()));\n   }\n\n   /** used for debugging, loads Module[] from specified URL */\n   getAllFakeModules(url: string): Observable {\n      return this.http.get(url);\n   }\n\n   /**\n    * Sends HTTP request to persist Module to back-end\n    * @param module What module to persist to back-end\n    */\n   createNewModule(module: Module): Observable {\n      let body: string = JSON.stringify(module);\n      return this.http.post(this.endpoints.CREATE_NEW_MODULE, body, { headers: this.HEADERS });\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModuleIndexPageComponent.html":{"url":"components/ModuleIndexPageComponent.html","title":"component - ModuleIndexPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModuleIndexPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/module-index-page/module-index-page.component.ts\n\n\n    \n        Description\n    \n    \n        Typescript Component for Module Index Page \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-module-index-page\n            \n\n            \n                styleUrls\n                ./module-index-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./module-index-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentVisible\n                            \n                            \n                                moduleContents\n                            \n                            \n                                    Public\n                                ms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listContent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                parseContentResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cs: ContentFetcherService, ms: ModuleStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/module-index-page/module-index-page.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor for Module Index Component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cs\n                                                  \n                                                        \n                                                                        ContentFetcherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Fetches content\n\n                                                        \n                                                \n                                                \n                                                        ms\n                                                  \n                                                        \n                                                                        ModuleStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Fetches tags\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listContent\n                        \n                        \n                    \n                \n            \n            \n                \nlistContent(module: Module)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/module-index-page/module-index-page.component.ts:43\n                \n            \n\n\n            \n                \n                    Lists the available content for module input\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                Module\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/module-index-page/module-index-page.component.ts:35\n                \n            \n\n\n            \n                \n                    On page initialization load the modules to list on the dropdown menu\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseContentResponse\n                        \n                        \n                    \n                \n            \n            \n                \nparseContentResponse(response: Content[], module: Module)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/module-index-page/module-index-page.component.ts:83\n                \n            \n\n\n            \n                \n                    Sort the content list order by title\nInsert into Module->List Map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                Content[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Available content\n\n                                    \n                                \n                                \n                                    module\n                                    \n                                                Module\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tags/modules for content\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/module-index-page/module-index-page.component.ts:17\n                            \n                        \n\n                \n                    \n                        Map of Visibility status of each Module \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleContents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/module-index-page/module-index-page.component.ts:21\n                            \n                        \n\n                \n                    \n                        Map of Modules to their list of related Content.\nLoaded when user clicks on Module (lazy load) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleStoreService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/module-index-page/module-index-page.component.ts:30\n                            \n                        \n\n                \n                    \n                        Fetches tags\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Module } from 'src/app/models/Module';\nimport { ModuleStoreService } from 'src/app/services/module-store.service';\nimport { ContentFetcherService } from 'src/app/services/content-fetcher.service';\nimport { Content } from 'src/app/models/Content';\nimport { Filter } from 'src/app/models/Filter';\n\n/** Typescript Component for Module Index Page */\n@Component({\n   selector: 'app-module-index-page',\n   templateUrl: './module-index-page.component.html',\n   styleUrls: ['./module-index-page.component.css']\n})\nexport class ModuleIndexPageComponent implements OnInit {\n\n   /** Map of Visibility status of each Module */\n   contentVisible: Map = new Map();\n\n   /** Map of Modules to their list of related Content.\n    * Loaded when user clicks on Module (lazy load) */\n   moduleContents: Map = new Map();\n\n   /**\n    * Constructor for Module Index Component\n    * @param cs Fetches content\n    * @param ms Fetches tags\n    */\n   constructor(\n      private cs: ContentFetcherService,\n      public ms: ModuleStoreService\n   ) { }\n\n   /** On page initialization load the modules to list on the dropdown menu\n    */\n   ngOnInit() {\n      this.ms.loadModules();\n   }\n\n   /**\n    * Lists the available content for module input\n    * @param {Module} module \n    */\n   listContent(module: Module) {\n      /* Check if Content list already loaded for Module */\n      if (null == this.moduleContents.get(module)) {\n\n         /* initialize the module's visibility */\n         this.contentVisible.set(module, false);\n\n         /* Retrieve Module's list of Content */\n         let filter: Filter = new Filter(\n            null, null, [module.id]\n         );\n         this.cs.filterContent(filter).subscribe(\n            (response) => {\n               if (response != null) {\n                  this.parseContentResponse(response, module);\n               } else {\n                  alert('Response was null');\n               }\n            },\n            (response) => {\n               alert(\"Failed to request contents\");\n            },\n            /* display module's contents when done loading */\n            () => { this.contentVisible.set(module, true); }\n         )\n      }\n\n      else {\n         /* Toggle visibility of Module's list of Content\n         * using ModuleStoreServices's map of Module->Boolean */\n         this.contentVisible.set(module, !this.contentVisible.get(module));\n      }\n   }\n\n   /**\n    * Sort the content list order by title\n    * Insert into Module->List Map\n    * @param response Available content\n    * @param module Tags/modules for content\n    */\n   parseContentResponse(response: Content[], module: Module) {\n\n      /* sort contents by their title */\n      let sortedResponse = response.sort(\n         (a, b) => { return a.title \n    \n\n    \n        \n   \n      \n         \n            \n         \n      \n      \n      \n         \n            \n              \n              \n              {{module.subject}}\n            \n            \n               \n                  \n                     \n                        \n                           \n                              \n                                 Content ID\n                                 Title\n                                 Format\n                                 Description\n                                 URL\n                              \n                           \n                           \n                              \n                                 {{content.id}}\n                                 {{content.title}}\n                                 {{content.format}}\n                                 {{content.description}}\n                                 {{content.url}}\n                                 \n                              \n                          \n                        \n                     \n                  \n               \n            \n         \n      \n   \n\n\n    \n\n    \n                \n                    ./module-index-page.component.css\n                \n                .card {\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    transition: 0.3s;\n    width: 80%;\n    height: 15%;\n    margin: 0 auto; /* Added */\n    float: none; /* Added */\n    margin-top: 20px; /* Added */\n\n  }\n\n  .card:hover {\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  }\n\n  .container {\n    padding: 2px 16px;\n    margin-top: 70px;\n  }\n\n#content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  top: -50px;\n    /* left: 0px; */\n    /* margin-bottom: 200px; */\n  }\n\n  .logo {\n    height: auto;\n    width: 10%;\n  }\n\n  .btn-radio {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  input[type=\"radio\"] {\n    margin-right: -15px;\n    /* width: 30px; */\n  }\n\n  .btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  td.tag-bubble-cell {\n    line-height: 2;\n  }\n\n  .tag-bubble {\n    padding: 2px;\n    margin: 1px;\n    background-color: #d5d5d5;\n    border-radius: 3px;\n    border: 1px solid black;\n  }\n\n  /* .table-responsive{-sm|-md|-lg|-xl} */\n\n  .fa-flag {\n    color: rgb(190,0,0);\n  }\n\n  .fa-flag:hover {\n    color: orange;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                        {{module.subject}}                                                                                                                                                                                                Content ID                                 Title                                 Format                                 Description                                 URL                                                                                                                                                   {{content.id}}                                 {{content.title}}                                 {{content.format}}                                 {{content.description}}                                 {{content.url}}                                                                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'ContentCreatorPageComponent', 'selector': 'app-content-creator-page'},{'name': 'ContentFinderPageComponent', 'selector': 'app-content-finder-page'},{'name': 'ModuleCreatorPageComponent', 'selector': 'app-module-creator-page'},{'name': 'ModuleIndexPageComponent', 'selector': 'app-module-index-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModuleIndexPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleStoreService.html":{"url":"injectables/ModuleStoreService.html","title":"injectable - ModuleStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModuleStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/module-store.service.ts\n        \n\n            \n                Description\n            \n            \n                ModuleStoreService provides a method to load all Modules and houses\ncollections of Module-related data for direct access.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingText\n                            \n                            \n                                response\n                            \n                            \n                                subjectIdToModule\n                            \n                            \n                                subjectIdToName\n                            \n                            \n                                subjectIdToSortedIndex\n                            \n                            \n                                subjectNames\n                            \n                            \n                                subjectNameToModule\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getColor\n                            \n                            \n                                loadModules\n                            \n                            \n                                populateCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ms: ModuleFetcherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/module-store.service.ts:37\n                            \n                        \n\n                \n                    \n                            Basic constructor for bss\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ms\n                                                  \n                                                        \n                                                                        ModuleFetcherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to obtain Modules from back-end\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/module-store.service.ts:102\n                \n            \n\n\n            \n                \n                    Choose color based on module index\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of Module, used to determine color\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadModules\n                        \n                        \n                    \n                \n            \n            \n                \nloadModules()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/module-store.service.ts:47\n                \n            \n\n\n            \n                \n                    load Modules once from backend on program start \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateCollections\n                        \n                        \n                    \n                \n            \n            \n                \npopulateCollections(modules: Module[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/module-store.service.ts:66\n                \n            \n\n\n            \n                \n                    fills collections defined using all available module info for quick,\neasy access to subject names, id, and alphabetical ordering \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modules\n                                    \n                                                Module[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/module-store.service.ts:35\n                            \n                        \n\n                \n                    \n                        Whether or not the Modules are still being loaded from back-end \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Loading Subjects...\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/module-store.service.ts:37\n                            \n                        \n\n                \n                    \n                        String representing the status of module-store-service \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            response\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Module[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/module-store.service.ts:33\n                            \n                        \n\n                \n                    \n                        All Modules being returned \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectIdToModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/module-store.service.ts:17\n                            \n                        \n\n                \n                    \n                        Mapping of Subject ID to Module \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectIdToName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/module-store.service.ts:19\n                            \n                        \n\n                \n                    \n                        Mapping of Subject ID to Subject Name \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectIdToSortedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/module-store.service.ts:30\n                            \n                        \n\n                \n                    \n                        subject id => index of subject's name in\nalphabetical order name array.\nCan be used for module Name string comparison using\nonly module ID \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/module-store.service.ts:22\n                            \n                        \n\n                \n                    \n                        all subject names in alphabetical order \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectNameToModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/module-store.service.ts:15\n                            \n                        \n\n                \n                    \n                        Mapping of Subject Name to Module \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Module } from '../models/Module';\nimport { ModuleFetcherService } from './module-fetcher.service';\n\n/** \n * ModuleStoreService provides a method to load all Modules and houses\n * collections of Module-related data for direct access.\n */\n@Injectable({\n   providedIn: 'root'\n})\nexport class ModuleStoreService {\n\n   /** Mapping of Subject Name to Module */\n   subjectNameToModule: Map;\n   /** Mapping of Subject ID to Module */\n   subjectIdToModule: Map;\n   /** Mapping of Subject ID to Subject Name */\n   subjectIdToName: Map;\n\n   /** all subject names in alphabetical order */\n   subjectNames: string[];\n\n   /**\n    * subject id => index of subject's name in\n    * alphabetical order name array.\n    * Can be used for module Name string comparison using\n    * only module ID \n    */\n   subjectIdToSortedIndex: Map;\n\n   /** All Modules being returned */\n   response: Module[];\n   /** Whether or not the Modules are still being loaded from back-end */\n   isLoading: boolean = true;\n   /** String representing the status of module-store-service */\n   loadingText: string = \"Loading Subjects...\";\n\n   /**\n    * Basic constructor for bss\n    * @param ms Service to obtain Modules from back-end\n    */\n   constructor(private ms: ModuleFetcherService) { }\n\n\n   /** load Modules once from backend on program start */\n   loadModules() {\n      this.isLoading = true;\n      this.loadingText = \"Loading Subjects...\";\n      this.ms.getAllModules().subscribe(\n         (response) => {\n            if (response != null) {\n               this.response = response;\n            }\n            else alert(\"Failed to retrieve any modules.\");\n         }, (response) => {\n            alert(\"Failed to send module request.\");\n         }, () => this.populateCollections(this.response)\n      )\n   }\n\n   /**\n    * fills collections defined using all available module info for quick,\n    * easy access to subject names, id, and alphabetical ordering \n    */\n   populateCollections(modules: Module[]) {\n      let i = 0;\n      let c = 0;\n\n      if (modules.length > 0) {\n         this.subjectNameToModule = new Map();\n         this.subjectIdToModule = new Map();\n         this.subjectIdToName = new Map();\n         this.subjectIdToSortedIndex = new Map();\n         this.subjectNames = [];\n\n         /* sort modules by subject name alphabetically */\n         modules.sort(\n            (a, b) => {\n               return a.subject.toLowerCase()  {\n               module.color = this.getColor(c++);\n               this.subjectNameToModule.set(module.subject, module);\n               this.subjectIdToModule.set(module.id, module);\n               this.subjectIdToName.set(module.id, module.subject);\n               this.subjectIdToSortedIndex.set(module.id, i++);\n               this.subjectNames.push(module.subject);\n            }, this\n         )\n      }\n      this.isLoading = false;\n      this.loadingText = \"Select relevant subjects\";\n   }\n\n   /**\n    * Choose color based on module index\n    * @param index Index of Module, used to determine color\n    */\n   private getColor(index : number): string {\n      if(index%2 == 0){\n         return \"#72A4C2\";\n      }\n      else{\n         return \"#B9B9BA\";\n      }\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/components/content-creator-page/content-creator-page.component.ts\n            \n            component\n            ContentCreatorPageComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/components/content-finder-page/content-finder-page.component.ts\n            \n            component\n            ContentFinderPageComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/components/module-creator-page/module-creator-page.component.ts\n            \n            component\n            ModuleCreatorPageComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/module-index-page/module-index-page.component.ts\n            \n            component\n            ModuleIndexPageComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/constants/endpoints.service.ts\n            \n            injectable\n            EndpointsService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/models/Content.ts\n            \n            class\n            Content\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/models/ContentWrapper.ts\n            \n            class\n            ContentWrapper\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/Filter.ts\n            \n            class\n            Filter\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/models/Link.ts\n            \n            class\n            Link\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/models/Module.ts\n            \n            class\n            Module\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/services/content-fetcher.service.ts\n            \n            injectable\n            ContentFetcherService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/module-fetcher.service.ts\n            \n            injectable\n            ModuleFetcherService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/module-store.service.ts\n            \n            injectable\n            ModuleStoreService\n            \n                100 %\n                (13/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ^7.2.15\n        \n            @angular/compiler-cli : ^7.2.15\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @ng-select/ng-select : ^2.20.0\n        \n            @types/jasmine : ^3.3.13\n        \n            @types/jasminewd2 : ^2.0.6\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCmsForce\nThis project was generated with Angular CLI version 7.3.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
